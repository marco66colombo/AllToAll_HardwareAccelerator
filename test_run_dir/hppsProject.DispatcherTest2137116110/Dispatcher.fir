circuit Dispatcher :
  module Dispatcher :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip x_PE : UInt<4>, flip y_PE : UInt<4>, flip x_0 : UInt<4>, flip y_0 : UInt<4>, flip x_dest : UInt<4>, flip y_dest : UInt<4>, left : UInt<1>, right : UInt<1>, up : UInt<1>, bottom : UInt<1>, this_PE : UInt<1>}

    wire out_selector : UInt<4> @[Dispatcher.scala 36:28]
    node _T = eq(out_selector, UInt<1>("h1")) @[Dispatcher.scala 54:29]
    node _T_1 = eq(io.this_PE, UInt<1>("h0")) @[Dispatcher.scala 54:46]
    node _T_2 = and(_T, _T_1) @[Dispatcher.scala 54:43]
    io.left <= _T_2 @[Dispatcher.scala 54:13]
    node _T_3 = eq(out_selector, UInt<2>("h2")) @[Dispatcher.scala 55:30]
    node _T_4 = eq(io.this_PE, UInt<1>("h0")) @[Dispatcher.scala 55:47]
    node _T_5 = and(_T_3, _T_4) @[Dispatcher.scala 55:44]
    io.right <= _T_5 @[Dispatcher.scala 55:14]
    node _T_6 = eq(out_selector, UInt<3>("h4")) @[Dispatcher.scala 56:27]
    node _T_7 = eq(io.this_PE, UInt<1>("h0")) @[Dispatcher.scala 56:44]
    node _T_8 = and(_T_6, _T_7) @[Dispatcher.scala 56:41]
    io.up <= _T_8 @[Dispatcher.scala 56:11]
    node _T_9 = eq(out_selector, UInt<4>("h8")) @[Dispatcher.scala 57:31]
    node _T_10 = eq(io.this_PE, UInt<1>("h0")) @[Dispatcher.scala 57:48]
    node _T_11 = and(_T_9, _T_10) @[Dispatcher.scala 57:45]
    io.bottom <= _T_11 @[Dispatcher.scala 57:15]
    node _T_12 = eq(io.x_dest, io.x_PE) @[Dispatcher.scala 62:20]
    node _T_13 = eq(io.y_dest, io.y_PE) @[Dispatcher.scala 62:45]
    node _T_14 = and(_T_12, _T_13) @[Dispatcher.scala 62:32]
    when _T_14 : @[Dispatcher.scala 62:57]
      io.this_PE <= UInt<1>("h1") @[Dispatcher.scala 63:20]
      out_selector <= UInt<1>("h0") @[Dispatcher.scala 64:22]
    else :
      io.this_PE <= UInt<1>("h0") @[Dispatcher.scala 66:20]
      out_selector <= UInt<1>("h0") @[Dispatcher.scala 67:22]
    node _T_15 = cvt(io.x_PE) @[Dispatcher.scala 70:31]
    node _T_16 = cvt(io.x_0) @[Dispatcher.scala 70:45]
    node _T_17 = sub(_T_15, _T_16) @[Dispatcher.scala 70:36]
    node _T_18 = tail(_T_17, 1) @[Dispatcher.scala 70:36]
    node x_PE_transl = asSInt(_T_18) @[Dispatcher.scala 70:36]
    node _T_19 = cvt(io.y_PE) @[Dispatcher.scala 71:31]
    node _T_20 = cvt(io.y_0) @[Dispatcher.scala 71:45]
    node _T_21 = sub(_T_19, _T_20) @[Dispatcher.scala 71:36]
    node _T_22 = tail(_T_21, 1) @[Dispatcher.scala 71:36]
    node y_PE_transl = asSInt(_T_22) @[Dispatcher.scala 71:36]
    node _T_23 = bits(x_PE_transl, 0, 0) @[Dispatcher.scala 72:38]
    node x_PE_transl_odd = eq(_T_23, UInt<1>("h1")) @[Dispatcher.scala 72:42]
    node _T_24 = bits(y_PE_transl, 0, 0) @[Dispatcher.scala 73:38]
    node y_PE_transl_odd = eq(_T_24, UInt<1>("h1")) @[Dispatcher.scala 73:42]
    node _T_25 = cvt(io.x_dest) @[Dispatcher.scala 74:35]
    node _T_26 = cvt(io.x_0) @[Dispatcher.scala 74:49]
    node _T_27 = sub(_T_25, _T_26) @[Dispatcher.scala 74:40]
    node _T_28 = tail(_T_27, 1) @[Dispatcher.scala 74:40]
    node x_dest_transl = asSInt(_T_28) @[Dispatcher.scala 74:40]
    node _T_29 = cvt(io.y_dest) @[Dispatcher.scala 75:35]
    node _T_30 = cvt(io.y_0) @[Dispatcher.scala 75:49]
    node _T_31 = sub(_T_29, _T_30) @[Dispatcher.scala 75:40]
    node _T_32 = tail(_T_31, 1) @[Dispatcher.scala 75:40]
    node y_dest_transl = asSInt(_T_32) @[Dispatcher.scala 75:40]
    node _T_33 = gt(io.x_PE, io.x_0) @[Dispatcher.scala 78:18]
    node _T_34 = eq(io.y_PE, io.y_0) @[Dispatcher.scala 78:38]
    node _T_35 = and(_T_33, _T_34) @[Dispatcher.scala 78:27]
    when _T_35 : @[Dispatcher.scala 78:49]
      when x_PE_transl_odd : @[Dispatcher.scala 80:30]
        node _T_36 = add(y_dest_transl, x_PE_transl) @[Dispatcher.scala 81:49]
        node _T_37 = tail(_T_36, 1) @[Dispatcher.scala 81:49]
        node _T_38 = asSInt(_T_37) @[Dispatcher.scala 81:49]
        node _T_39 = leq(x_dest_transl, _T_38) @[Dispatcher.scala 81:32]
        when _T_39 : @[Dispatcher.scala 81:63]
          out_selector <= UInt<3>("h4") @[Dispatcher.scala 83:30]
        else :
          out_selector <= UInt<2>("h2") @[Dispatcher.scala 86:30]
      else :
        node _T_40 = sub(asSInt(UInt<1>("h0")), y_dest_transl) @[Dispatcher.scala 89:35]
        node _T_41 = tail(_T_40, 1) @[Dispatcher.scala 89:35]
        node _T_42 = asSInt(_T_41) @[Dispatcher.scala 89:35]
        node _T_43 = add(_T_42, x_PE_transl) @[Dispatcher.scala 89:50]
        node _T_44 = tail(_T_43, 1) @[Dispatcher.scala 89:50]
        node _T_45 = asSInt(_T_44) @[Dispatcher.scala 89:50]
        node _T_46 = leq(x_dest_transl, _T_45) @[Dispatcher.scala 89:32]
        when _T_46 : @[Dispatcher.scala 89:64]
          out_selector <= UInt<4>("h8") @[Dispatcher.scala 91:30]
        else :
          out_selector <= UInt<2>("h2") @[Dispatcher.scala 94:30]
    node _T_47 = eq(io.x_PE, io.x_0) @[Dispatcher.scala 100:18]
    node _T_48 = gt(io.y_PE, io.y_0) @[Dispatcher.scala 100:40]
    node _T_49 = and(_T_47, _T_48) @[Dispatcher.scala 100:29]
    when _T_49 : @[Dispatcher.scala 100:49]
      when y_PE_transl_odd : @[Dispatcher.scala 102:30]
        node _T_50 = sub(asSInt(UInt<1>("h0")), y_dest_transl) @[Dispatcher.scala 103:35]
        node _T_51 = tail(_T_50, 1) @[Dispatcher.scala 103:35]
        node _T_52 = asSInt(_T_51) @[Dispatcher.scala 103:35]
        node _T_53 = add(_T_52, y_PE_transl) @[Dispatcher.scala 103:50]
        node _T_54 = tail(_T_53, 1) @[Dispatcher.scala 103:50]
        node _T_55 = asSInt(_T_54) @[Dispatcher.scala 103:50]
        node _T_56 = leq(x_dest_transl, _T_55) @[Dispatcher.scala 103:32]
        when _T_56 : @[Dispatcher.scala 103:64]
          out_selector <= UInt<1>("h1") @[Dispatcher.scala 105:30]
        else :
          out_selector <= UInt<3>("h4") @[Dispatcher.scala 108:30]
      else :
        node _T_57 = sub(y_dest_transl, y_PE_transl) @[Dispatcher.scala 111:49]
        node _T_58 = tail(_T_57, 1) @[Dispatcher.scala 111:49]
        node _T_59 = asSInt(_T_58) @[Dispatcher.scala 111:49]
        node _T_60 = geq(x_dest_transl, _T_59) @[Dispatcher.scala 111:32]
        when _T_60 : @[Dispatcher.scala 111:63]
          out_selector <= UInt<2>("h2") @[Dispatcher.scala 113:30]
        else :
          out_selector <= UInt<3>("h4") @[Dispatcher.scala 116:30]
    node _T_61 = lt(io.x_PE, io.x_0) @[Dispatcher.scala 122:18]
    node _T_62 = eq(io.y_PE, io.y_0) @[Dispatcher.scala 122:38]
    node _T_63 = and(_T_61, _T_62) @[Dispatcher.scala 122:27]
    when _T_63 : @[Dispatcher.scala 122:49]
      when x_PE_transl_odd : @[Dispatcher.scala 124:30]
        node _T_64 = add(y_dest_transl, x_PE_transl) @[Dispatcher.scala 125:49]
        node _T_65 = tail(_T_64, 1) @[Dispatcher.scala 125:49]
        node _T_66 = asSInt(_T_65) @[Dispatcher.scala 125:49]
        node _T_67 = geq(x_dest_transl, _T_66) @[Dispatcher.scala 125:32]
        when _T_67 : @[Dispatcher.scala 125:63]
          out_selector <= UInt<4>("h8") @[Dispatcher.scala 127:30]
        else :
          out_selector <= UInt<1>("h1") @[Dispatcher.scala 130:30]
      else :
        node _T_68 = sub(asSInt(UInt<1>("h0")), y_dest_transl) @[Dispatcher.scala 133:35]
        node _T_69 = tail(_T_68, 1) @[Dispatcher.scala 133:35]
        node _T_70 = asSInt(_T_69) @[Dispatcher.scala 133:35]
        node _T_71 = add(_T_70, x_PE_transl) @[Dispatcher.scala 133:50]
        node _T_72 = tail(_T_71, 1) @[Dispatcher.scala 133:50]
        node _T_73 = asSInt(_T_72) @[Dispatcher.scala 133:50]
        node _T_74 = geq(x_dest_transl, _T_73) @[Dispatcher.scala 133:32]
        when _T_74 : @[Dispatcher.scala 133:64]
          out_selector <= UInt<3>("h4") @[Dispatcher.scala 135:30]
        else :
          out_selector <= UInt<1>("h1") @[Dispatcher.scala 138:30]
    node _T_75 = eq(io.x_PE, io.x_0) @[Dispatcher.scala 144:18]
    node _T_76 = lt(io.y_PE, io.y_0) @[Dispatcher.scala 144:40]
    node _T_77 = and(_T_75, _T_76) @[Dispatcher.scala 144:29]
    when _T_77 : @[Dispatcher.scala 144:49]
      when y_PE_transl_odd : @[Dispatcher.scala 146:30]
        node _T_78 = sub(asSInt(UInt<1>("h0")), y_dest_transl) @[Dispatcher.scala 147:35]
        node _T_79 = tail(_T_78, 1) @[Dispatcher.scala 147:35]
        node _T_80 = asSInt(_T_79) @[Dispatcher.scala 147:35]
        node _T_81 = add(_T_80, y_PE_transl) @[Dispatcher.scala 147:50]
        node _T_82 = tail(_T_81, 1) @[Dispatcher.scala 147:50]
        node _T_83 = asSInt(_T_82) @[Dispatcher.scala 147:50]
        node _T_84 = geq(x_dest_transl, _T_83) @[Dispatcher.scala 147:32]
        when _T_84 : @[Dispatcher.scala 147:64]
          out_selector <= UInt<2>("h2") @[Dispatcher.scala 149:30]
        else :
          out_selector <= UInt<4>("h8") @[Dispatcher.scala 152:30]
      else :
        node _T_85 = sub(y_dest_transl, y_PE_transl) @[Dispatcher.scala 155:49]
        node _T_86 = tail(_T_85, 1) @[Dispatcher.scala 155:49]
        node _T_87 = asSInt(_T_86) @[Dispatcher.scala 155:49]
        node _T_88 = leq(x_dest_transl, _T_87) @[Dispatcher.scala 155:32]
        when _T_88 : @[Dispatcher.scala 155:63]
          out_selector <= UInt<1>("h1") @[Dispatcher.scala 157:30]
        else :
          out_selector <= UInt<4>("h8") @[Dispatcher.scala 160:30]

