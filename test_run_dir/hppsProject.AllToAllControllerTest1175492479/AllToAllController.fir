circuit AllToAllController :
  module AllToAllController :
    input clock : Clock
    input reset : UInt<1>
    output io : { processor : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}, flip mesh : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}}

    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllController.scala 42:22]
    reg r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), r) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      r <= io.processor.cmd.bits.inst.rd @[Reg.scala 16:23]
    reg rd_address_mem : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      rd_address_mem <= r @[Reg.scala 16:23]
    reg rd_address_mem_resp_stall : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem_resp_stall) @[AllToAllController.scala 54:38]
    reg rd_address_action : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_action) @[AllToAllController.scala 55:30]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllController.scala 61:28]
    node _T = eq(io.processor.resp.ready, UInt<1>("h0")) @[AllToAllController.scala 63:20]
    node stall_resp = and(_T, resp_signal) @[AllToAllController.scala 63:33]
    io.processor.interrupt <= UInt<1>("h0") @[AllToAllController.scala 67:26]
    io.mesh.cmd.bits.rs1 <= io.processor.cmd.bits.rs1 @[AllToAllController.scala 70:24]
    io.mesh.cmd.bits.rs2 <= io.processor.cmd.bits.rs2 @[AllToAllController.scala 71:24]
    io.processor.resp.bits.data <= io.mesh.resp.bits.data @[AllToAllController.scala 74:19]
    io.processor.resp.valid <= resp_signal @[AllToAllController.scala 78:15]
    node _T_1 = eq(io.processor.cmd.bits.inst.opcode, UInt<6>("h2b")) @[AllToAllController.scala 85:59]
    node goto_excange = and(io.processor.cmd.valid, _T_1) @[AllToAllController.scala 85:33]
    node goto_done_exchange = eq(io.mesh.busy, UInt<1>("h0")) @[AllToAllController.scala 86:28]
    node _T_2 = eq(io.processor.cmd.bits.inst.opcode, UInt<4>("hb")) @[AllToAllController.scala 89:54]
    node mem_cmd = and(io.processor.cmd.valid, _T_2) @[AllToAllController.scala 89:28]
    node loadSignal = eq(io.processor.cmd.bits.inst.funct, UInt<1>("h1")) @[AllToAllController.scala 91:41]
    node storeSignal = eq(io.processor.cmd.bits.inst.funct, UInt<2>("h2")) @[AllToAllController.scala 93:42]
    io.mesh.cmd.valid <= io.processor.cmd.valid @[AllToAllController.scala 96:21]
    node _T_3 = and(mem_cmd, loadSignal) @[AllToAllController.scala 97:36]
    io.mesh.cmd.bits.load <= _T_3 @[AllToAllController.scala 97:25]
    node _T_4 = and(mem_cmd, storeSignal) @[AllToAllController.scala 98:37]
    io.mesh.cmd.bits.store <= _T_4 @[AllToAllController.scala 98:26]
    io.mesh.cmd.bits.doAllToAll <= goto_excange @[AllToAllController.scala 99:31]
    node _T_5 = eq(state, UInt<3>("h0")) @[AllToAllController.scala 103:14]
    when _T_5 : @[AllToAllController.scala 103:23]
      node _T_6 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 105:34]
      io.processor.busy <= _T_6 @[AllToAllController.scala 105:23]
      node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 106:29]
      node _T_8 = and(UInt<1>("h1"), _T_7) @[AllToAllController.scala 106:26]
      io.processor.cmd.ready <= _T_8 @[AllToAllController.scala 106:16]
      node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 108:40]
      node _T_10 = and(io.processor.cmd.valid, _T_9) @[AllToAllController.scala 108:37]
      io.mesh.cmd.valid <= _T_10 @[AllToAllController.scala 108:23]
      resp_signal <= UInt<1>("h0") @[AllToAllController.scala 111:17]
      node _T_11 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 114:39]
      io.mesh.resp.ready <= _T_11 @[AllToAllController.scala 114:24]
      io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 116:31]
      rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 117:31]
      node _T_12 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 119:26]
      node _T_13 = and(goto_excange, _T_12) @[AllToAllController.scala 119:23]
      when _T_13 : @[AllToAllController.scala 119:38]
        state <= UInt<3>("h1") @[AllToAllController.scala 120:13]
      else :
        node _T_14 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 121:27]
        node _T_15 = and(mem_cmd, _T_14) @[AllToAllController.scala 121:24]
        when _T_15 : @[AllToAllController.scala 121:39]
          state <= UInt<3>("h3") @[AllToAllController.scala 122:13]
        else :
          when stall_resp : @[AllToAllController.scala 123:27]
            state <= UInt<3>("h5") @[AllToAllController.scala 124:13]
          else :
            state <= UInt<3>("h0") @[AllToAllController.scala 126:13]
    else :
      node _T_16 = eq(state, UInt<3>("h3")) @[AllToAllController.scala 129:20]
      when _T_16 : @[AllToAllController.scala 129:38]
        node _T_17 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 131:34]
        io.processor.busy <= _T_17 @[AllToAllController.scala 131:23]
        node _T_18 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 132:29]
        node _T_19 = and(UInt<1>("h1"), _T_18) @[AllToAllController.scala 132:26]
        io.processor.cmd.ready <= _T_19 @[AllToAllController.scala 132:16]
        node _T_20 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 134:40]
        node _T_21 = and(io.processor.cmd.valid, _T_20) @[AllToAllController.scala 134:37]
        io.mesh.cmd.valid <= _T_21 @[AllToAllController.scala 134:23]
        resp_signal <= UInt<1>("h1") @[AllToAllController.scala 138:17]
        node _T_22 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 141:39]
        io.mesh.resp.ready <= _T_22 @[AllToAllController.scala 141:24]
        io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 143:31]
        rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 144:31]
        node _T_23 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 154:26]
        node _T_24 = and(goto_excange, _T_23) @[AllToAllController.scala 154:23]
        when _T_24 : @[AllToAllController.scala 154:38]
          state <= UInt<3>("h1") @[AllToAllController.scala 155:13]
        else :
          node _T_25 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 156:27]
          node _T_26 = and(mem_cmd, _T_25) @[AllToAllController.scala 156:24]
          when _T_26 : @[AllToAllController.scala 156:39]
            state <= UInt<3>("h3") @[AllToAllController.scala 157:13]
          else :
            when stall_resp : @[AllToAllController.scala 158:27]
              state <= UInt<3>("h5") @[AllToAllController.scala 159:13]
            else :
              state <= UInt<3>("h0") @[AllToAllController.scala 161:13]
      else :
        node _T_27 = eq(state, UInt<3>("h5")) @[AllToAllController.scala 164:20]
        when _T_27 : @[AllToAllController.scala 164:36]
          io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 168:23]
          io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 169:16]
          io.mesh.cmd.valid <= UInt<1>("h0") @[AllToAllController.scala 170:23]
          io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 173:24]
          io.processor.resp.bits.rd <= rd_address_mem_resp_stall @[AllToAllController.scala 175:31]
          when stall_resp : @[AllToAllController.scala 177:21]
            resp_signal <= UInt<1>("h1") @[AllToAllController.scala 179:19]
            state <= UInt<3>("h5") @[AllToAllController.scala 180:13]
          else :
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 184:19]
            state <= UInt<3>("h0") @[AllToAllController.scala 185:13]
        else :
          node _T_28 = eq(state, UInt<3>("h1")) @[AllToAllController.scala 189:20]
          when _T_28 : @[AllToAllController.scala 189:31]
            io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 191:23]
            io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 192:16]
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 194:17]
            rd_address_action <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 196:23]
            io.mesh.resp.ready <= resp_signal @[AllToAllController.scala 199:24]
            io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 201:31]
            state <= UInt<3>("h4") @[AllToAllController.scala 203:11]
          else :
            node _T_29 = eq(state, UInt<3>("h4")) @[AllToAllController.scala 205:20]
            when _T_29 : @[AllToAllController.scala 205:41]
              io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 207:23]
              io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 208:16]
              io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 211:24]
              io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 213:31]
              when goto_done_exchange : @[AllToAllController.scala 215:29]
                state <= UInt<3>("h2") @[AllToAllController.scala 216:13]
              else :
                state <= UInt<3>("h4") @[AllToAllController.scala 218:13]
            else :
              node _T_30 = eq(state, UInt<3>("h2")) @[AllToAllController.scala 221:20]
              when _T_30 : @[AllToAllController.scala 221:36]
                io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 223:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 224:16]
                io.mesh.resp.ready <= UInt<1>("h1") @[AllToAllController.scala 228:24]
                io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 230:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 232:11]
              else :
                io.processor.busy <= UInt<1>("h0") @[AllToAllController.scala 236:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 237:16]
                io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 240:24]
                io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 242:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 244:11]

