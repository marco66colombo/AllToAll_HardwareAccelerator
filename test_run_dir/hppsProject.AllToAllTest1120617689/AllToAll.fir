circuit AllToAll :
  module AllToAllController :
    input clock : Clock
    input reset : Reset
    output io : { processor : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}, flip mesh : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}}

    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllController.scala 42:22]
    reg r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), r) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      r <= io.processor.cmd.bits.inst.rd @[Reg.scala 16:23]
    reg rd_address_mem : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      rd_address_mem <= r @[Reg.scala 16:23]
    reg rd_address_mem_resp_stall : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem_resp_stall) @[AllToAllController.scala 54:38]
    reg rd_address_action : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_action) @[AllToAllController.scala 55:30]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllController.scala 61:28]
    node _T = eq(io.processor.resp.ready, UInt<1>("h0")) @[AllToAllController.scala 63:20]
    node stall_resp = and(_T, resp_signal) @[AllToAllController.scala 63:33]
    io.processor.interrupt <= UInt<1>("h0") @[AllToAllController.scala 67:26]
    io.mesh.cmd.bits.rs1 <= io.processor.cmd.bits.rs1 @[AllToAllController.scala 70:24]
    io.mesh.cmd.bits.rs2 <= io.processor.cmd.bits.rs2 @[AllToAllController.scala 71:24]
    io.processor.resp.bits.data <= io.mesh.resp.bits.data @[AllToAllController.scala 74:19]
    io.processor.resp.valid <= resp_signal @[AllToAllController.scala 78:15]
    node _T_1 = eq(io.processor.cmd.bits.inst.opcode, UInt<6>("h2b")) @[AllToAllController.scala 85:59]
    node goto_excange = and(io.processor.cmd.valid, _T_1) @[AllToAllController.scala 85:33]
    node goto_done_exchange = eq(io.mesh.busy, UInt<1>("h0")) @[AllToAllController.scala 86:28]
    node _T_2 = eq(io.processor.cmd.bits.inst.opcode, UInt<4>("hb")) @[AllToAllController.scala 89:54]
    node mem_cmd = and(io.processor.cmd.valid, _T_2) @[AllToAllController.scala 89:28]
    node loadSignal = eq(io.processor.cmd.bits.inst.funct, UInt<1>("h1")) @[AllToAllController.scala 91:41]
    node storeSignal = eq(io.processor.cmd.bits.inst.funct, UInt<2>("h2")) @[AllToAllController.scala 93:42]
    io.mesh.cmd.valid <= io.processor.cmd.valid @[AllToAllController.scala 96:21]
    node _T_3 = and(mem_cmd, loadSignal) @[AllToAllController.scala 97:36]
    io.mesh.cmd.bits.load <= _T_3 @[AllToAllController.scala 97:25]
    node _T_4 = and(mem_cmd, storeSignal) @[AllToAllController.scala 98:37]
    io.mesh.cmd.bits.store <= _T_4 @[AllToAllController.scala 98:26]
    io.mesh.cmd.bits.doAllToAll <= goto_excange @[AllToAllController.scala 99:31]
    node _T_5 = eq(state, UInt<3>("h0")) @[AllToAllController.scala 103:14]
    when _T_5 : @[AllToAllController.scala 103:23]
      node _T_6 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 105:34]
      io.processor.busy <= _T_6 @[AllToAllController.scala 105:23]
      node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 106:29]
      node _T_8 = and(UInt<1>("h1"), _T_7) @[AllToAllController.scala 106:26]
      io.processor.cmd.ready <= _T_8 @[AllToAllController.scala 106:16]
      node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 108:40]
      node _T_10 = and(io.processor.cmd.valid, _T_9) @[AllToAllController.scala 108:37]
      io.mesh.cmd.valid <= _T_10 @[AllToAllController.scala 108:23]
      resp_signal <= UInt<1>("h0") @[AllToAllController.scala 111:17]
      node _T_11 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 114:39]
      io.mesh.resp.ready <= _T_11 @[AllToAllController.scala 114:24]
      io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 116:31]
      rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 117:31]
      node _T_12 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 119:26]
      node _T_13 = and(goto_excange, _T_12) @[AllToAllController.scala 119:23]
      when _T_13 : @[AllToAllController.scala 119:38]
        state <= UInt<3>("h1") @[AllToAllController.scala 120:13]
      else :
        node _T_14 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 121:27]
        node _T_15 = and(mem_cmd, _T_14) @[AllToAllController.scala 121:24]
        when _T_15 : @[AllToAllController.scala 121:39]
          state <= UInt<3>("h3") @[AllToAllController.scala 122:13]
        else :
          when stall_resp : @[AllToAllController.scala 123:27]
            state <= UInt<3>("h5") @[AllToAllController.scala 124:13]
          else :
            state <= UInt<3>("h0") @[AllToAllController.scala 126:13]
    else :
      node _T_16 = eq(state, UInt<3>("h3")) @[AllToAllController.scala 129:20]
      when _T_16 : @[AllToAllController.scala 129:38]
        node _T_17 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 131:34]
        io.processor.busy <= _T_17 @[AllToAllController.scala 131:23]
        node _T_18 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 132:29]
        node _T_19 = and(UInt<1>("h1"), _T_18) @[AllToAllController.scala 132:26]
        io.processor.cmd.ready <= _T_19 @[AllToAllController.scala 132:16]
        node _T_20 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 134:40]
        node _T_21 = and(io.processor.cmd.valid, _T_20) @[AllToAllController.scala 134:37]
        io.mesh.cmd.valid <= _T_21 @[AllToAllController.scala 134:23]
        resp_signal <= UInt<1>("h1") @[AllToAllController.scala 138:17]
        node _T_22 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 141:39]
        io.mesh.resp.ready <= _T_22 @[AllToAllController.scala 141:24]
        io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 143:31]
        rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 144:31]
        node _T_23 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 154:26]
        node _T_24 = and(goto_excange, _T_23) @[AllToAllController.scala 154:23]
        when _T_24 : @[AllToAllController.scala 154:38]
          state <= UInt<3>("h1") @[AllToAllController.scala 155:13]
        else :
          node _T_25 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 156:27]
          node _T_26 = and(mem_cmd, _T_25) @[AllToAllController.scala 156:24]
          when _T_26 : @[AllToAllController.scala 156:39]
            state <= UInt<3>("h3") @[AllToAllController.scala 157:13]
          else :
            when stall_resp : @[AllToAllController.scala 158:27]
              state <= UInt<3>("h5") @[AllToAllController.scala 159:13]
            else :
              state <= UInt<3>("h0") @[AllToAllController.scala 161:13]
      else :
        node _T_27 = eq(state, UInt<3>("h5")) @[AllToAllController.scala 164:20]
        when _T_27 : @[AllToAllController.scala 164:36]
          io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 168:23]
          io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 169:16]
          io.mesh.cmd.valid <= UInt<1>("h0") @[AllToAllController.scala 170:23]
          io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 173:24]
          io.processor.resp.bits.rd <= rd_address_mem_resp_stall @[AllToAllController.scala 175:31]
          when stall_resp : @[AllToAllController.scala 177:21]
            resp_signal <= UInt<1>("h1") @[AllToAllController.scala 179:19]
            state <= UInt<3>("h5") @[AllToAllController.scala 180:13]
          else :
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 184:19]
            state <= UInt<3>("h0") @[AllToAllController.scala 185:13]
        else :
          node _T_28 = eq(state, UInt<3>("h1")) @[AllToAllController.scala 189:20]
          when _T_28 : @[AllToAllController.scala 189:31]
            io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 191:23]
            io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 192:16]
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 194:17]
            rd_address_action <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 196:23]
            io.mesh.resp.ready <= resp_signal @[AllToAllController.scala 199:24]
            io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 201:31]
            state <= UInt<3>("h4") @[AllToAllController.scala 203:11]
          else :
            node _T_29 = eq(state, UInt<3>("h4")) @[AllToAllController.scala 205:20]
            when _T_29 : @[AllToAllController.scala 205:41]
              io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 207:23]
              io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 208:16]
              io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 211:24]
              io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 213:31]
              when goto_done_exchange : @[AllToAllController.scala 215:29]
                state <= UInt<3>("h2") @[AllToAllController.scala 216:13]
              else :
                state <= UInt<3>("h4") @[AllToAllController.scala 218:13]
            else :
              node _T_30 = eq(state, UInt<3>("h2")) @[AllToAllController.scala 221:20]
              when _T_30 : @[AllToAllController.scala 221:36]
                io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 223:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 224:16]
                io.mesh.resp.ready <= UInt<1>("h1") @[AllToAllController.scala 228:24]
                io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 230:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 232:11]
              else :
                io.processor.busy <= UInt<1>("h0") @[AllToAllController.scala 236:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 237:16]
                io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 240:24]
                io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 242:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 244:11]

  module AllToAllPEupLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEup :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEupRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEleft :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEmiddle :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEright :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEbottomLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEbottom :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllPEbottomRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 151:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 152:7]
    reg w_en : UInt<1>, clock with :
      reset => (UInt<1>("h0"), w_en) @[AllToAllPE.scala 155:17]
    io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 156:29]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 161:22]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 162:28]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 163:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 165:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 166:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 167:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 173:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 173:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 173:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 174:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 175:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 176:38]
    node _T_2 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 178:14]
    when _T_2 : @[AllToAllPE.scala 178:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 179:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 180:18]
      io.resp.valid <= resp_signal @[AllToAllPE.scala 181:19]
      io.resp.bits.data <= resp_value @[AllToAllPE.scala 182:23]
      resp_value <= UInt<1>("h0") @[AllToAllPE.scala 183:16]
      resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 184:17]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 185:10]
      when load_signal : @[AllToAllPE.scala 187:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 188:13]
      else :
        when store_signal : @[AllToAllPE.scala 189:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 190:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 191:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 192:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 194:13]
    else :
      node _T_3 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 197:20]
      when _T_3 : @[AllToAllPE.scala 197:32]
        io.busy <= UInt<1>("h0") @[AllToAllPE.scala 198:13]
        io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 199:18]
        io.resp.valid <= resp_signal @[AllToAllPE.scala 200:19]
        io.resp.bits.data <= resp_value @[AllToAllPE.scala 201:23]
        resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 202:17]
        when is_this_PE : @[AllToAllPE.scala 204:21]
          node _T_4 = bits(memIndex, 4, 0) @[AllToAllPE.scala 205:12]
          infer mport MPORT = memPE[_T_4], clock @[AllToAllPE.scala 205:12]
          MPORT <= rs1 @[AllToAllPE.scala 205:23]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 206:12]
        else :
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 208:12]
        resp_value <= UInt<64>("h20") @[AllToAllPE.scala 210:16]
        when load_signal : @[AllToAllPE.scala 212:22]
          state <= UInt<3>("h3") @[AllToAllPE.scala 213:13]
        else :
          when store_signal : @[AllToAllPE.scala 214:29]
            state <= UInt<3>("h4") @[AllToAllPE.scala 215:13]
          else :
            when allToAll_signal : @[AllToAllPE.scala 216:32]
              state <= UInt<3>("h1") @[AllToAllPE.scala 217:13]
            else :
              state <= UInt<3>("h0") @[AllToAllPE.scala 219:13]
      else :
        node _T_5 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 222:20]
        when _T_5 : @[AllToAllPE.scala 222:33]
          io.busy <= UInt<1>("h0") @[AllToAllPE.scala 224:13]
          io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 225:18]
          io.resp.valid <= resp_signal @[AllToAllPE.scala 226:19]
          io.resp.bits.data <= resp_value @[AllToAllPE.scala 227:23]
          resp_signal <= UInt<1>("h1") @[AllToAllPE.scala 228:17]
          when is_this_PE : @[AllToAllPE.scala 230:21]
            node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 231:26]
            infer mport MPORT_1 = memPE[_T_6], clock @[AllToAllPE.scala 231:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 231:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 232:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 234:12]
          when load_signal : @[AllToAllPE.scala 237:22]
            state <= UInt<3>("h3") @[AllToAllPE.scala 238:13]
          else :
            when store_signal : @[AllToAllPE.scala 239:29]
              state <= UInt<3>("h4") @[AllToAllPE.scala 240:13]
            else :
              when allToAll_signal : @[AllToAllPE.scala 241:32]
                state <= UInt<3>("h1") @[AllToAllPE.scala 242:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 244:13]
        else :
          node _T_7 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 247:20]
          when _T_7 : @[AllToAllPE.scala 247:31]
            io.busy <= UInt<1>("h1") @[AllToAllPE.scala 248:13]
            io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 249:18]
            io.resp.valid <= resp_signal @[AllToAllPE.scala 250:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 251:23]
            resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 254:17]
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 256:10]
            state <= UInt<3>("h2") @[AllToAllPE.scala 258:11]
          else :
            node _T_8 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 259:20]
            when _T_8 : @[AllToAllPE.scala 259:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 260:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 261:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 262:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 263:23]
              resp_signal <= UInt<1>("h0") @[AllToAllPE.scala 265:17]
              state <= UInt<3>("h0") @[AllToAllPE.scala 267:11]
            else :
              io.busy <= UInt<1>("h0") @[AllToAllPE.scala 269:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 270:18]
              io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 271:19]
              io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 272:23]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 277:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 278:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 279:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 280:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 281:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 282:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 285:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 286:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 287:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 288:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 289:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 290:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 291:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 293:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 294:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 295:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 296:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 297:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 298:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 299:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:22]

  module AllToAllMesh :
    input clock : Clock
    input reset : Reset
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}

    inst vector_0 of AllToAllPEupLeftCorner @[AllToAllMesh.scala 95:41]
    vector_0.clock <= clock
    vector_0.reset <= reset
    inst vector_1 of AllToAllPEup @[AllToAllMesh.scala 106:41]
    vector_1.clock <= clock
    vector_1.reset <= reset
    inst vector_2 of AllToAllPEupRightCorner @[AllToAllMesh.scala 98:41]
    vector_2.clock <= clock
    vector_2.reset <= reset
    inst vector_3 of AllToAllPEleft @[AllToAllMesh.scala 112:41]
    vector_3.clock <= clock
    vector_3.reset <= reset
    inst vector_4 of AllToAllPEmiddle @[AllToAllMesh.scala 118:41]
    vector_4.clock <= clock
    vector_4.reset <= reset
    inst vector_5 of AllToAllPEright @[AllToAllMesh.scala 115:41]
    vector_5.clock <= clock
    vector_5.reset <= reset
    inst vector_6 of AllToAllPEbottomLeftCorner @[AllToAllMesh.scala 101:41]
    vector_6.clock <= clock
    vector_6.reset <= reset
    inst vector_7 of AllToAllPEbottom @[AllToAllMesh.scala 109:41]
    vector_7.clock <= clock
    vector_7.reset <= reset
    inst vector_8 of AllToAllPEbottomRightCorner @[AllToAllMesh.scala 104:41]
    vector_8.clock <= clock
    vector_8.reset <= reset
    vector_0.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_0.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_0.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_0.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_0.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_0.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_0.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_1.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_1.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_1.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_1.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_1.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_1.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_1.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_2.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_2.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_2.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_2.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_2.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_2.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_2.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_3.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_3.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_3.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_3.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_3.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_3.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_3.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_4.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_4.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_4.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_4.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_4.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_4.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_4.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_5.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_5.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_5.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_5.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_5.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_5.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_5.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_6.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_6.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_6.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_6.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_6.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_6.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_6.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_7.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_7.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_7.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_7.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_7.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_7.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_7.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_8.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_8.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_8.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_8.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_8.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_8.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_8.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    node _T = or(vector_0.io.busy, vector_1.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_1 = or(_T, vector_2.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_2 = or(_T_1, vector_3.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_3 = or(_T_2, vector_4.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_4 = or(_T_3, vector_5.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_5 = or(_T_4, vector_6.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_6 = or(_T_5, vector_7.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_7 = or(_T_6, vector_8.io.busy) @[AllToAllMesh.scala 143:47]
    io.busy <= _T_7 @[AllToAllMesh.scala 143:13]
    node _T_8 = and(vector_0.io.cmd.ready, vector_1.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_9 = and(_T_8, vector_2.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_10 = and(_T_9, vector_3.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_11 = and(_T_10, vector_4.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_12 = and(_T_11, vector_5.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_13 = and(_T_12, vector_6.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_14 = and(_T_13, vector_7.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_15 = and(_T_14, vector_8.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    io.cmd.ready <= _T_15 @[AllToAllMesh.scala 144:18]
    node _T_16 = and(vector_0.io.resp.valid, vector_1.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_17 = and(_T_16, vector_2.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_18 = and(_T_17, vector_3.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_19 = and(_T_18, vector_4.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_20 = and(_T_19, vector_5.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_21 = and(_T_20, vector_6.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_22 = and(_T_21, vector_7.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_23 = and(_T_22, vector_8.io.resp.valid) @[AllToAllMesh.scala 145:59]
    io.resp.valid <= _T_23 @[AllToAllMesh.scala 145:19]
    node _T_24 = mux(vector_7.io.resp.bits.write_enable, vector_7.io.resp.bits.data, vector_8.io.resp.bits.data) @[Mux.scala 47:69]
    node _T_25 = mux(vector_6.io.resp.bits.write_enable, vector_6.io.resp.bits.data, _T_24) @[Mux.scala 47:69]
    node _T_26 = mux(vector_5.io.resp.bits.write_enable, vector_5.io.resp.bits.data, _T_25) @[Mux.scala 47:69]
    node _T_27 = mux(vector_4.io.resp.bits.write_enable, vector_4.io.resp.bits.data, _T_26) @[Mux.scala 47:69]
    node _T_28 = mux(vector_3.io.resp.bits.write_enable, vector_3.io.resp.bits.data, _T_27) @[Mux.scala 47:69]
    node _T_29 = mux(vector_2.io.resp.bits.write_enable, vector_2.io.resp.bits.data, _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(vector_1.io.resp.bits.write_enable, vector_1.io.resp.bits.data, _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(vector_0.io.resp.bits.write_enable, vector_0.io.resp.bits.data, _T_30) @[Mux.scala 47:69]
    io.resp.bits.data <= _T_31 @[AllToAllMesh.scala 194:23]
    vector_0.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 202:40]
    vector_0.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 203:44]
    vector_0.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 204:43]
    vector_0.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 205:43]
    vector_0.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 206:46]
    vector_0.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 207:46]
    vector_0.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 208:41]
    vector_0.io.right.in.valid <= vector_1.io.left.out.valid @[AllToAllMesh.scala 210:41]
    vector_0.io.right.in.bits.data <= vector_1.io.left.out.bits.data @[AllToAllMesh.scala 211:45]
    vector_0.io.right.in.bits.x_0 <= vector_1.io.left.out.bits.x_0 @[AllToAllMesh.scala 212:44]
    vector_0.io.right.in.bits.y_0 <= vector_1.io.left.out.bits.y_0 @[AllToAllMesh.scala 213:44]
    vector_0.io.right.in.bits.x_dest <= vector_1.io.left.out.bits.x_dest @[AllToAllMesh.scala 214:47]
    vector_0.io.right.in.bits.y_dest <= vector_1.io.left.out.bits.y_dest @[AllToAllMesh.scala 215:47]
    vector_0.io.right.out.ready <= vector_1.io.left.in.ready @[AllToAllMesh.scala 216:42]
    vector_0.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 218:38]
    vector_0.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 219:42]
    vector_0.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 220:41]
    vector_0.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 221:41]
    vector_0.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 222:44]
    vector_0.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 223:44]
    vector_0.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 224:39]
    vector_0.io.bottom.in.valid <= vector_3.io.up.out.valid @[AllToAllMesh.scala 226:42]
    vector_0.io.bottom.in.bits.data <= vector_3.io.up.out.bits.data @[AllToAllMesh.scala 227:46]
    vector_0.io.bottom.in.bits.x_0 <= vector_3.io.up.out.bits.x_0 @[AllToAllMesh.scala 228:45]
    vector_0.io.bottom.in.bits.y_0 <= vector_3.io.up.out.bits.y_0 @[AllToAllMesh.scala 229:45]
    vector_0.io.bottom.in.bits.x_dest <= vector_3.io.up.out.bits.x_dest @[AllToAllMesh.scala 230:48]
    vector_0.io.bottom.in.bits.y_dest <= vector_3.io.up.out.bits.y_dest @[AllToAllMesh.scala 231:48]
    vector_0.io.bottom.out.ready <= vector_3.io.up.in.ready @[AllToAllMesh.scala 232:43]
    vector_1.io.left.in.valid <= vector_0.io.right.out.valid @[AllToAllMesh.scala 367:40]
    vector_1.io.left.in.bits.data <= vector_0.io.right.out.bits.data @[AllToAllMesh.scala 368:44]
    vector_1.io.left.in.bits.x_0 <= vector_0.io.right.out.bits.x_0 @[AllToAllMesh.scala 369:43]
    vector_1.io.left.in.bits.y_0 <= vector_0.io.right.out.bits.y_0 @[AllToAllMesh.scala 370:43]
    vector_1.io.left.in.bits.x_dest <= vector_0.io.right.out.bits.x_dest @[AllToAllMesh.scala 371:46]
    vector_1.io.left.in.bits.y_dest <= vector_0.io.right.out.bits.y_dest @[AllToAllMesh.scala 372:46]
    vector_1.io.left.out.ready <= vector_0.io.right.in.ready @[AllToAllMesh.scala 373:41]
    vector_1.io.right.in.valid <= vector_2.io.left.out.valid @[AllToAllMesh.scala 375:41]
    vector_1.io.right.in.bits.data <= vector_2.io.left.out.bits.data @[AllToAllMesh.scala 376:45]
    vector_1.io.right.in.bits.x_0 <= vector_2.io.left.out.bits.x_0 @[AllToAllMesh.scala 377:44]
    vector_1.io.right.in.bits.y_0 <= vector_2.io.left.out.bits.y_0 @[AllToAllMesh.scala 378:44]
    vector_1.io.right.in.bits.x_dest <= vector_2.io.left.out.bits.x_dest @[AllToAllMesh.scala 379:47]
    vector_1.io.right.in.bits.y_dest <= vector_2.io.left.out.bits.y_dest @[AllToAllMesh.scala 380:47]
    vector_1.io.right.out.ready <= vector_2.io.left.in.ready @[AllToAllMesh.scala 381:42]
    vector_1.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 383:38]
    vector_1.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 384:42]
    vector_1.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 385:41]
    vector_1.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 386:41]
    vector_1.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 387:44]
    vector_1.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 388:44]
    vector_1.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 389:39]
    vector_1.io.bottom.in.valid <= vector_4.io.up.out.valid @[AllToAllMesh.scala 391:42]
    vector_1.io.bottom.in.bits.data <= vector_4.io.up.out.bits.data @[AllToAllMesh.scala 392:46]
    vector_1.io.bottom.in.bits.x_0 <= vector_4.io.up.out.bits.x_0 @[AllToAllMesh.scala 393:45]
    vector_1.io.bottom.in.bits.y_0 <= vector_4.io.up.out.bits.y_0 @[AllToAllMesh.scala 394:45]
    vector_1.io.bottom.in.bits.x_dest <= vector_4.io.up.out.bits.x_dest @[AllToAllMesh.scala 395:48]
    vector_1.io.bottom.in.bits.y_dest <= vector_4.io.up.out.bits.y_dest @[AllToAllMesh.scala 396:48]
    vector_1.io.bottom.out.ready <= vector_4.io.up.in.ready @[AllToAllMesh.scala 397:43]
    vector_2.io.left.in.valid <= vector_1.io.right.out.valid @[AllToAllMesh.scala 242:40]
    vector_2.io.left.in.bits.data <= vector_1.io.right.out.bits.data @[AllToAllMesh.scala 243:44]
    vector_2.io.left.in.bits.x_0 <= vector_1.io.right.out.bits.x_0 @[AllToAllMesh.scala 244:43]
    vector_2.io.left.in.bits.y_0 <= vector_1.io.right.out.bits.y_0 @[AllToAllMesh.scala 245:43]
    vector_2.io.left.in.bits.x_dest <= vector_1.io.right.out.bits.x_dest @[AllToAllMesh.scala 246:46]
    vector_2.io.left.in.bits.y_dest <= vector_1.io.right.out.bits.y_dest @[AllToAllMesh.scala 247:46]
    vector_2.io.left.out.ready <= vector_1.io.right.in.ready @[AllToAllMesh.scala 248:41]
    vector_2.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 250:41]
    vector_2.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 251:45]
    vector_2.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 252:44]
    vector_2.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 253:44]
    vector_2.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 254:47]
    vector_2.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 255:47]
    vector_2.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 256:42]
    vector_2.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 258:38]
    vector_2.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 259:42]
    vector_2.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 260:41]
    vector_2.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 261:41]
    vector_2.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 262:44]
    vector_2.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 263:44]
    vector_2.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 264:39]
    vector_2.io.bottom.in.valid <= vector_5.io.up.out.valid @[AllToAllMesh.scala 266:42]
    vector_2.io.bottom.in.bits.data <= vector_5.io.up.out.bits.data @[AllToAllMesh.scala 267:46]
    vector_2.io.bottom.in.bits.x_0 <= vector_5.io.up.out.bits.x_0 @[AllToAllMesh.scala 268:45]
    vector_2.io.bottom.in.bits.y_0 <= vector_5.io.up.out.bits.y_0 @[AllToAllMesh.scala 269:45]
    vector_2.io.bottom.in.bits.x_dest <= vector_5.io.up.out.bits.x_dest @[AllToAllMesh.scala 270:48]
    vector_2.io.bottom.in.bits.y_dest <= vector_5.io.up.out.bits.y_dest @[AllToAllMesh.scala 271:48]
    vector_2.io.bottom.out.ready <= vector_5.io.up.in.ready @[AllToAllMesh.scala 272:43]
    vector_3.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 448:40]
    vector_3.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 449:44]
    vector_3.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 450:43]
    vector_3.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 451:43]
    vector_3.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 452:46]
    vector_3.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 453:46]
    vector_3.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 454:41]
    vector_3.io.right.in.valid <= vector_4.io.left.out.valid @[AllToAllMesh.scala 456:41]
    vector_3.io.right.in.bits.data <= vector_4.io.left.out.bits.data @[AllToAllMesh.scala 457:45]
    vector_3.io.right.in.bits.x_0 <= vector_4.io.left.out.bits.x_0 @[AllToAllMesh.scala 458:44]
    vector_3.io.right.in.bits.y_0 <= vector_4.io.left.out.bits.y_0 @[AllToAllMesh.scala 459:44]
    vector_3.io.right.in.bits.x_dest <= vector_4.io.left.out.bits.x_dest @[AllToAllMesh.scala 460:47]
    vector_3.io.right.in.bits.y_dest <= vector_4.io.left.out.bits.y_dest @[AllToAllMesh.scala 461:47]
    vector_3.io.right.out.ready <= vector_4.io.left.in.ready @[AllToAllMesh.scala 462:42]
    vector_3.io.up.in.valid <= vector_0.io.bottom.out.valid @[AllToAllMesh.scala 464:38]
    vector_3.io.up.in.bits.data <= vector_0.io.bottom.out.bits.data @[AllToAllMesh.scala 465:42]
    vector_3.io.up.in.bits.x_0 <= vector_0.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 466:41]
    vector_3.io.up.in.bits.y_0 <= vector_0.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 467:41]
    vector_3.io.up.in.bits.x_dest <= vector_0.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 468:44]
    vector_3.io.up.in.bits.y_dest <= vector_0.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 469:44]
    vector_3.io.up.out.ready <= vector_0.io.bottom.in.ready @[AllToAllMesh.scala 470:39]
    vector_3.io.bottom.in.valid <= vector_6.io.up.out.valid @[AllToAllMesh.scala 472:42]
    vector_3.io.bottom.in.bits.data <= vector_6.io.up.out.bits.data @[AllToAllMesh.scala 473:46]
    vector_3.io.bottom.in.bits.x_0 <= vector_6.io.up.out.bits.x_0 @[AllToAllMesh.scala 474:45]
    vector_3.io.bottom.in.bits.y_0 <= vector_6.io.up.out.bits.y_0 @[AllToAllMesh.scala 475:45]
    vector_3.io.bottom.in.bits.x_dest <= vector_6.io.up.out.bits.x_dest @[AllToAllMesh.scala 476:48]
    vector_3.io.bottom.in.bits.y_dest <= vector_6.io.up.out.bits.y_dest @[AllToAllMesh.scala 477:48]
    vector_3.io.bottom.out.ready <= vector_6.io.up.in.ready @[AllToAllMesh.scala 478:43]
    vector_4.io.left.in.valid <= vector_3.io.right.out.valid @[AllToAllMesh.scala 531:40]
    vector_4.io.left.in.bits.data <= vector_3.io.right.out.bits.data @[AllToAllMesh.scala 532:44]
    vector_4.io.left.in.bits.x_0 <= vector_3.io.right.out.bits.x_0 @[AllToAllMesh.scala 533:43]
    vector_4.io.left.in.bits.y_0 <= vector_3.io.right.out.bits.y_0 @[AllToAllMesh.scala 534:43]
    vector_4.io.left.in.bits.x_dest <= vector_3.io.right.out.bits.x_dest @[AllToAllMesh.scala 535:46]
    vector_4.io.left.in.bits.y_dest <= vector_3.io.right.out.bits.y_dest @[AllToAllMesh.scala 536:46]
    vector_4.io.left.out.ready <= vector_3.io.right.in.ready @[AllToAllMesh.scala 537:41]
    vector_4.io.right.in.valid <= vector_5.io.left.out.valid @[AllToAllMesh.scala 539:41]
    vector_4.io.right.in.bits.data <= vector_5.io.left.out.bits.data @[AllToAllMesh.scala 540:45]
    vector_4.io.right.in.bits.x_0 <= vector_5.io.left.out.bits.x_0 @[AllToAllMesh.scala 541:44]
    vector_4.io.right.in.bits.y_0 <= vector_5.io.left.out.bits.y_0 @[AllToAllMesh.scala 542:44]
    vector_4.io.right.in.bits.x_dest <= vector_5.io.left.out.bits.x_dest @[AllToAllMesh.scala 543:47]
    vector_4.io.right.in.bits.y_dest <= vector_5.io.left.out.bits.y_dest @[AllToAllMesh.scala 544:47]
    vector_4.io.right.out.ready <= vector_5.io.left.in.ready @[AllToAllMesh.scala 545:42]
    vector_4.io.up.in.valid <= vector_1.io.bottom.out.valid @[AllToAllMesh.scala 547:38]
    vector_4.io.up.in.bits.data <= vector_1.io.bottom.out.bits.data @[AllToAllMesh.scala 548:42]
    vector_4.io.up.in.bits.x_0 <= vector_1.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 549:41]
    vector_4.io.up.in.bits.y_0 <= vector_1.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 550:41]
    vector_4.io.up.in.bits.x_dest <= vector_1.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 551:44]
    vector_4.io.up.in.bits.y_dest <= vector_1.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 552:44]
    vector_4.io.up.out.ready <= vector_1.io.bottom.in.ready @[AllToAllMesh.scala 553:39]
    vector_4.io.bottom.in.valid <= vector_7.io.up.out.valid @[AllToAllMesh.scala 555:42]
    vector_4.io.bottom.in.bits.data <= vector_7.io.up.out.bits.data @[AllToAllMesh.scala 556:46]
    vector_4.io.bottom.in.bits.x_0 <= vector_7.io.up.out.bits.x_0 @[AllToAllMesh.scala 557:45]
    vector_4.io.bottom.in.bits.y_0 <= vector_7.io.up.out.bits.y_0 @[AllToAllMesh.scala 558:45]
    vector_4.io.bottom.in.bits.x_dest <= vector_7.io.up.out.bits.x_dest @[AllToAllMesh.scala 559:48]
    vector_4.io.bottom.in.bits.y_dest <= vector_7.io.up.out.bits.y_dest @[AllToAllMesh.scala 560:48]
    vector_4.io.bottom.out.ready <= vector_7.io.up.in.ready @[AllToAllMesh.scala 561:43]
    vector_5.io.left.in.valid <= vector_4.io.right.out.valid @[AllToAllMesh.scala 489:40]
    vector_5.io.left.in.bits.data <= vector_4.io.right.out.bits.data @[AllToAllMesh.scala 490:44]
    vector_5.io.left.in.bits.x_0 <= vector_4.io.right.out.bits.x_0 @[AllToAllMesh.scala 491:43]
    vector_5.io.left.in.bits.y_0 <= vector_4.io.right.out.bits.y_0 @[AllToAllMesh.scala 492:43]
    vector_5.io.left.in.bits.x_dest <= vector_4.io.right.out.bits.x_dest @[AllToAllMesh.scala 493:46]
    vector_5.io.left.in.bits.y_dest <= vector_4.io.right.out.bits.y_dest @[AllToAllMesh.scala 494:46]
    vector_5.io.left.out.ready <= vector_4.io.right.in.ready @[AllToAllMesh.scala 495:41]
    vector_5.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 497:41]
    vector_5.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 498:45]
    vector_5.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 499:44]
    vector_5.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 500:44]
    vector_5.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 501:47]
    vector_5.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 502:47]
    vector_5.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 503:42]
    vector_5.io.up.in.valid <= vector_2.io.bottom.out.valid @[AllToAllMesh.scala 505:38]
    vector_5.io.up.in.bits.data <= vector_2.io.bottom.out.bits.data @[AllToAllMesh.scala 506:42]
    vector_5.io.up.in.bits.x_0 <= vector_2.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 507:41]
    vector_5.io.up.in.bits.y_0 <= vector_2.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 508:41]
    vector_5.io.up.in.bits.x_dest <= vector_2.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 509:44]
    vector_5.io.up.in.bits.y_dest <= vector_2.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 510:44]
    vector_5.io.up.out.ready <= vector_2.io.bottom.in.ready @[AllToAllMesh.scala 511:39]
    vector_5.io.bottom.in.valid <= vector_8.io.up.out.valid @[AllToAllMesh.scala 513:42]
    vector_5.io.bottom.in.bits.data <= vector_8.io.up.out.bits.data @[AllToAllMesh.scala 514:46]
    vector_5.io.bottom.in.bits.x_0 <= vector_8.io.up.out.bits.x_0 @[AllToAllMesh.scala 515:45]
    vector_5.io.bottom.in.bits.y_0 <= vector_8.io.up.out.bits.y_0 @[AllToAllMesh.scala 516:45]
    vector_5.io.bottom.in.bits.x_dest <= vector_8.io.up.out.bits.x_dest @[AllToAllMesh.scala 517:48]
    vector_5.io.bottom.in.bits.y_dest <= vector_8.io.up.out.bits.y_dest @[AllToAllMesh.scala 518:48]
    vector_5.io.bottom.out.ready <= vector_8.io.up.in.ready @[AllToAllMesh.scala 519:43]
    vector_6.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 284:40]
    vector_6.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 285:44]
    vector_6.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 286:43]
    vector_6.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 287:43]
    vector_6.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 288:46]
    vector_6.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 289:46]
    vector_6.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 290:41]
    vector_6.io.right.in.valid <= vector_7.io.left.out.valid @[AllToAllMesh.scala 292:41]
    vector_6.io.right.in.bits.data <= vector_7.io.left.out.bits.data @[AllToAllMesh.scala 293:45]
    vector_6.io.right.in.bits.x_0 <= vector_7.io.left.out.bits.x_0 @[AllToAllMesh.scala 294:44]
    vector_6.io.right.in.bits.y_0 <= vector_7.io.left.out.bits.y_0 @[AllToAllMesh.scala 295:44]
    vector_6.io.right.in.bits.x_dest <= vector_7.io.left.out.bits.x_dest @[AllToAllMesh.scala 296:47]
    vector_6.io.right.in.bits.y_dest <= vector_7.io.left.out.bits.y_dest @[AllToAllMesh.scala 297:47]
    vector_6.io.right.out.ready <= vector_7.io.left.in.ready @[AllToAllMesh.scala 298:42]
    vector_6.io.up.in.valid <= vector_3.io.bottom.out.valid @[AllToAllMesh.scala 300:38]
    vector_6.io.up.in.bits.data <= vector_3.io.bottom.out.bits.data @[AllToAllMesh.scala 301:42]
    vector_6.io.up.in.bits.x_0 <= vector_3.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 302:41]
    vector_6.io.up.in.bits.y_0 <= vector_3.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 303:41]
    vector_6.io.up.in.bits.x_dest <= vector_3.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 304:44]
    vector_6.io.up.in.bits.y_dest <= vector_3.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 305:44]
    vector_6.io.up.out.ready <= vector_3.io.bottom.in.ready @[AllToAllMesh.scala 306:39]
    vector_6.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 308:42]
    vector_6.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 309:46]
    vector_6.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 310:45]
    vector_6.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 311:45]
    vector_6.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 312:48]
    vector_6.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 313:48]
    vector_6.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 314:43]
    vector_7.io.left.in.valid <= vector_6.io.right.out.valid @[AllToAllMesh.scala 407:40]
    vector_7.io.left.in.bits.data <= vector_6.io.right.out.bits.data @[AllToAllMesh.scala 408:44]
    vector_7.io.left.in.bits.x_0 <= vector_6.io.right.out.bits.x_0 @[AllToAllMesh.scala 409:43]
    vector_7.io.left.in.bits.y_0 <= vector_6.io.right.out.bits.y_0 @[AllToAllMesh.scala 410:43]
    vector_7.io.left.in.bits.x_dest <= vector_6.io.right.out.bits.x_dest @[AllToAllMesh.scala 411:46]
    vector_7.io.left.in.bits.y_dest <= vector_6.io.right.out.bits.y_dest @[AllToAllMesh.scala 412:46]
    vector_7.io.left.out.ready <= vector_6.io.right.in.ready @[AllToAllMesh.scala 413:41]
    vector_7.io.right.in.valid <= vector_8.io.left.out.valid @[AllToAllMesh.scala 415:41]
    vector_7.io.right.in.bits.data <= vector_8.io.left.out.bits.data @[AllToAllMesh.scala 416:45]
    vector_7.io.right.in.bits.x_0 <= vector_8.io.left.out.bits.x_0 @[AllToAllMesh.scala 417:44]
    vector_7.io.right.in.bits.y_0 <= vector_8.io.left.out.bits.y_0 @[AllToAllMesh.scala 418:44]
    vector_7.io.right.in.bits.x_dest <= vector_8.io.left.out.bits.x_dest @[AllToAllMesh.scala 419:47]
    vector_7.io.right.in.bits.y_dest <= vector_8.io.left.out.bits.y_dest @[AllToAllMesh.scala 420:47]
    vector_7.io.right.out.ready <= vector_8.io.left.in.ready @[AllToAllMesh.scala 421:42]
    vector_7.io.up.in.valid <= vector_4.io.bottom.out.valid @[AllToAllMesh.scala 423:38]
    vector_7.io.up.in.bits.data <= vector_4.io.bottom.out.bits.data @[AllToAllMesh.scala 424:42]
    vector_7.io.up.in.bits.x_0 <= vector_4.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 425:41]
    vector_7.io.up.in.bits.y_0 <= vector_4.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 426:41]
    vector_7.io.up.in.bits.x_dest <= vector_4.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 427:44]
    vector_7.io.up.in.bits.y_dest <= vector_4.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 428:44]
    vector_7.io.up.out.ready <= vector_4.io.bottom.in.ready @[AllToAllMesh.scala 429:39]
    vector_7.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 431:42]
    vector_7.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 432:46]
    vector_7.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 433:45]
    vector_7.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 434:45]
    vector_7.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 435:48]
    vector_7.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 436:48]
    vector_7.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 437:43]
    vector_8.io.left.in.valid <= vector_7.io.right.out.valid @[AllToAllMesh.scala 325:40]
    vector_8.io.left.in.bits.data <= vector_7.io.right.out.bits.data @[AllToAllMesh.scala 326:44]
    vector_8.io.left.in.bits.x_0 <= vector_7.io.right.out.bits.x_0 @[AllToAllMesh.scala 327:43]
    vector_8.io.left.in.bits.y_0 <= vector_7.io.right.out.bits.y_0 @[AllToAllMesh.scala 328:43]
    vector_8.io.left.in.bits.x_dest <= vector_7.io.right.out.bits.x_dest @[AllToAllMesh.scala 329:46]
    vector_8.io.left.in.bits.y_dest <= vector_7.io.right.out.bits.y_dest @[AllToAllMesh.scala 330:46]
    vector_8.io.left.out.ready <= vector_7.io.right.in.ready @[AllToAllMesh.scala 331:41]
    vector_8.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 333:41]
    vector_8.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 334:45]
    vector_8.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 335:44]
    vector_8.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 336:44]
    vector_8.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 337:47]
    vector_8.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 338:47]
    vector_8.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 339:42]
    vector_8.io.up.in.valid <= vector_5.io.bottom.out.valid @[AllToAllMesh.scala 341:38]
    vector_8.io.up.in.bits.data <= vector_5.io.bottom.out.bits.data @[AllToAllMesh.scala 342:42]
    vector_8.io.up.in.bits.x_0 <= vector_5.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 343:41]
    vector_8.io.up.in.bits.y_0 <= vector_5.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 344:41]
    vector_8.io.up.in.bits.x_dest <= vector_5.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 345:44]
    vector_8.io.up.in.bits.y_dest <= vector_5.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 346:44]
    vector_8.io.up.out.ready <= vector_5.io.bottom.in.ready @[AllToAllMesh.scala 347:39]
    vector_8.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 349:42]
    vector_8.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 350:46]
    vector_8.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 351:45]
    vector_8.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 352:45]
    vector_8.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 353:48]
    vector_8.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 354:48]
    vector_8.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 355:43]

  module AllToAllModule :
    input clock : Clock
    input reset : Reset
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}

    inst controller of AllToAllController @[AllToAllAccelerator.scala 71:26]
    controller.clock <= clock
    controller.reset <= reset
    inst mesh of AllToAllMesh @[AllToAllAccelerator.scala 72:20]
    mesh.clock <= clock
    mesh.reset <= reset
    controller.io.processor.exception <= io.exception @[AllToAllAccelerator.scala 78:6]
    io.interrupt <= controller.io.processor.interrupt @[AllToAllAccelerator.scala 78:6]
    io.busy <= controller.io.processor.busy @[AllToAllAccelerator.scala 78:6]
    io.resp.bits.data <= controller.io.processor.resp.bits.data @[AllToAllAccelerator.scala 78:6]
    io.resp.bits.rd <= controller.io.processor.resp.bits.rd @[AllToAllAccelerator.scala 78:6]
    io.resp.valid <= controller.io.processor.resp.valid @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.resp.ready <= io.resp.ready @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.opcode <= io.cmd.bits.inst.opcode @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rd <= io.cmd.bits.inst.rd @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xs2 <= io.cmd.bits.inst.xs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xs1 <= io.cmd.bits.inst.xs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xd <= io.cmd.bits.inst.xd @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rs1 <= io.cmd.bits.inst.rs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rs2 <= io.cmd.bits.inst.rs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.funct <= io.cmd.bits.inst.funct @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.valid <= io.cmd.valid @[AllToAllAccelerator.scala 78:6]
    io.cmd.ready <= controller.io.processor.cmd.ready @[AllToAllAccelerator.scala 78:6]
    mesh.io.cmd.valid <= controller.io.mesh.cmd.valid @[AllToAllAccelerator.scala 83:21]
    mesh.io.cmd.bits.load <= controller.io.mesh.cmd.bits.load @[AllToAllAccelerator.scala 84:25]
    mesh.io.cmd.bits.store <= controller.io.mesh.cmd.bits.store @[AllToAllAccelerator.scala 85:26]
    mesh.io.cmd.bits.doAllToAll <= controller.io.mesh.cmd.bits.doAllToAll @[AllToAllAccelerator.scala 86:31]
    mesh.io.cmd.bits.rs1 <= controller.io.mesh.cmd.bits.rs1 @[AllToAllAccelerator.scala 87:24]
    mesh.io.cmd.bits.rs2 <= controller.io.mesh.cmd.bits.rs2 @[AllToAllAccelerator.scala 88:24]
    mesh.io.resp.ready <= controller.io.mesh.resp.ready @[AllToAllAccelerator.scala 89:22]
    controller.io.mesh.cmd.ready <= mesh.io.cmd.ready @[AllToAllAccelerator.scala 92:32]
    controller.io.mesh.resp.valid <= mesh.io.resp.valid @[AllToAllAccelerator.scala 93:33]
    controller.io.mesh.resp.bits.data <= mesh.io.resp.bits.data @[AllToAllAccelerator.scala 94:37]
    controller.io.mesh.busy <= mesh.io.busy @[AllToAllAccelerator.scala 95:27]

  module AllToAll :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}

    inst aTaModule of AllToAllModule @[AllToAllTest.scala 13:25]
    aTaModule.clock <= clock
    aTaModule.reset <= reset
    aTaModule.io.cmd.valid <= io.cmd.valid @[AllToAllTest.scala 16:26]
    aTaModule.io.cmd.bits.inst.funct <= io.cmd.bits.inst.funct @[AllToAllTest.scala 17:36]
    aTaModule.io.cmd.bits.inst.rs2 <= io.cmd.bits.inst.rs2 @[AllToAllTest.scala 18:34]
    aTaModule.io.cmd.bits.inst.rs1 <= io.cmd.bits.inst.rs1 @[AllToAllTest.scala 19:34]
    aTaModule.io.cmd.bits.inst.xd <= io.cmd.bits.inst.xd @[AllToAllTest.scala 20:33]
    aTaModule.io.cmd.bits.inst.xs1 <= io.cmd.bits.inst.xs1 @[AllToAllTest.scala 21:34]
    aTaModule.io.cmd.bits.inst.xs2 <= io.cmd.bits.inst.xs2 @[AllToAllTest.scala 22:34]
    aTaModule.io.cmd.bits.inst.rd <= io.cmd.bits.inst.rd @[AllToAllTest.scala 23:33]
    aTaModule.io.cmd.bits.inst.opcode <= io.cmd.bits.inst.opcode @[AllToAllTest.scala 24:37]
    aTaModule.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllTest.scala 25:29]
    aTaModule.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllTest.scala 26:29]
    aTaModule.io.resp.ready <= io.resp.ready @[AllToAllTest.scala 27:27]
    io.cmd.ready <= aTaModule.io.cmd.ready @[AllToAllTest.scala 31:16]
    io.resp.valid <= aTaModule.io.resp.valid @[AllToAllTest.scala 32:17]
    io.resp.bits.rd <= aTaModule.io.resp.bits.rd @[AllToAllTest.scala 33:19]
    io.resp.bits.data <= aTaModule.io.resp.bits.data @[AllToAllTest.scala 34:21]
    io.interrupt <= aTaModule.io.interrupt @[AllToAllTest.scala 37:16]
    io.busy <= aTaModule.io.busy @[AllToAllTest.scala 38:11]
    aTaModule.io.exception <= io.exception @[AllToAllTest.scala 41:26]

