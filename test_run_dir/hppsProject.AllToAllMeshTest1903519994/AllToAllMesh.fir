circuit AllToAllMesh :
  module AllToAllPEupLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEup :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEupRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEleft :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEmiddle :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEright :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEbottomLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEbottom :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllPEbottomRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [256] @[AllToAllPE.scala 129:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 132:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 133:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 136:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 137:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 140:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 141:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 150:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 151:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 153:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 154:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 155:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 163:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 163:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 163:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 164:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 165:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 166:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 168:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 168:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 170:14]
    when _T_3 : @[AllToAllPE.scala 170:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 171:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 172:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 173:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 174:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 176:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 177:10]
      when load_signal : @[AllToAllPE.scala 179:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 180:13]
      else :
        when store_signal : @[AllToAllPE.scala 181:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 182:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 183:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 184:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 186:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 189:20]
      when _T_4 : @[AllToAllPE.scala 189:32]
        io.busy <= stall_resp @[AllToAllPE.scala 190:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 191:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 191:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 192:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 193:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 194:16]
        when is_this_PE : @[AllToAllPE.scala 196:21]
          node _T_6 = bits(memIndex, 7, 0) @[AllToAllPE.scala 197:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 197:12]
          MPORT <= rs1 @[AllToAllPE.scala 197:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 198:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 199:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 201:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 202:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 205:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 205:22]
        when _T_8 : @[AllToAllPE.scala 205:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 206:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 207:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 207:29]
          when _T_10 : @[AllToAllPE.scala 207:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 208:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 209:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 209:32]
            when _T_12 : @[AllToAllPE.scala 209:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 210:13]
            else :
              when stall_resp : @[AllToAllPE.scala 211:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 212:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 214:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 217:20]
        when _T_13 : @[AllToAllPE.scala 217:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 219:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 220:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 221:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 222:23]
          when is_this_PE : @[AllToAllPE.scala 224:21]
            node _T_14 = bits(memIndex, 7, 0) @[AllToAllPE.scala 225:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 225:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 225:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 226:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 228:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 231:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 233:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 235:20]
          when _T_15 : @[AllToAllPE.scala 235:35]
            io.busy <= stall_resp @[AllToAllPE.scala 237:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 238:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 238:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 239:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 240:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 241:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 243:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 243:22]
            when _T_18 : @[AllToAllPE.scala 243:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 244:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 245:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 245:29]
              when _T_20 : @[AllToAllPE.scala 245:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 246:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 247:32]
                when _T_22 : @[AllToAllPE.scala 247:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 248:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 249:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 250:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 252:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 255:20]
            when _T_23 : @[AllToAllPE.scala 255:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 257:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 258:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 259:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 260:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 262:31]
              when stall_resp : @[AllToAllPE.scala 264:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 265:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 267:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 270:20]
              when _T_24 : @[AllToAllPE.scala 270:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 271:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 272:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 273:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 274:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 276:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 277:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 279:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 281:20]
                when _T_25 : @[AllToAllPE.scala 281:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 282:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 283:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 284:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 285:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 286:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 288:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 292:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 293:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 294:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 295:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 296:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 301:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 302:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 303:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 304:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 305:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 306:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 307:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 309:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 310:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 311:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 312:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 313:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 314:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 315:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 317:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 318:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 319:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 320:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 321:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 322:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 323:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 325:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 326:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 327:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 328:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 329:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 330:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:22]

  module AllToAllMesh :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}

    inst vector_0 of AllToAllPEupLeftCorner @[AllToAllMesh.scala 95:41]
    vector_0.clock <= clock
    vector_0.reset <= reset
    inst vector_1 of AllToAllPEup @[AllToAllMesh.scala 106:41]
    vector_1.clock <= clock
    vector_1.reset <= reset
    inst vector_2 of AllToAllPEupRightCorner @[AllToAllMesh.scala 98:41]
    vector_2.clock <= clock
    vector_2.reset <= reset
    inst vector_3 of AllToAllPEleft @[AllToAllMesh.scala 112:41]
    vector_3.clock <= clock
    vector_3.reset <= reset
    inst vector_4 of AllToAllPEmiddle @[AllToAllMesh.scala 118:41]
    vector_4.clock <= clock
    vector_4.reset <= reset
    inst vector_5 of AllToAllPEright @[AllToAllMesh.scala 115:41]
    vector_5.clock <= clock
    vector_5.reset <= reset
    inst vector_6 of AllToAllPEbottomLeftCorner @[AllToAllMesh.scala 101:41]
    vector_6.clock <= clock
    vector_6.reset <= reset
    inst vector_7 of AllToAllPEbottom @[AllToAllMesh.scala 109:41]
    vector_7.clock <= clock
    vector_7.reset <= reset
    inst vector_8 of AllToAllPEbottomRightCorner @[AllToAllMesh.scala 104:41]
    vector_8.clock <= clock
    vector_8.reset <= reset
    vector_0.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_0.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_0.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_0.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_0.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_0.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_0.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_1.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_1.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_1.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_1.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_1.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_1.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_1.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_2.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_2.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_2.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_2.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_2.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_2.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_2.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_3.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_3.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_3.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_3.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_3.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_3.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_3.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_4.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_4.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_4.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_4.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_4.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_4.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_4.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_5.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_5.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_5.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_5.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_5.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_5.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_5.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_6.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_6.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_6.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_6.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_6.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_6.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_6.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_7.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_7.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_7.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_7.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_7.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_7.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_7.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_8.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_8.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_8.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_8.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_8.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_8.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_8.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    node _T = or(vector_0.io.busy, vector_1.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_1 = or(_T, vector_2.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_2 = or(_T_1, vector_3.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_3 = or(_T_2, vector_4.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_4 = or(_T_3, vector_5.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_5 = or(_T_4, vector_6.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_6 = or(_T_5, vector_7.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_7 = or(_T_6, vector_8.io.busy) @[AllToAllMesh.scala 143:47]
    io.busy <= _T_7 @[AllToAllMesh.scala 143:13]
    node _T_8 = and(vector_0.io.cmd.ready, vector_1.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_9 = and(_T_8, vector_2.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_10 = and(_T_9, vector_3.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_11 = and(_T_10, vector_4.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_12 = and(_T_11, vector_5.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_13 = and(_T_12, vector_6.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_14 = and(_T_13, vector_7.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_15 = and(_T_14, vector_8.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    io.cmd.ready <= _T_15 @[AllToAllMesh.scala 144:18]
    node _T_16 = and(vector_0.io.resp.valid, vector_1.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_17 = and(_T_16, vector_2.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_18 = and(_T_17, vector_3.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_19 = and(_T_18, vector_4.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_20 = and(_T_19, vector_5.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_21 = and(_T_20, vector_6.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_22 = and(_T_21, vector_7.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_23 = and(_T_22, vector_8.io.resp.valid) @[AllToAllMesh.scala 145:59]
    io.resp.valid <= _T_23 @[AllToAllMesh.scala 145:19]
    node _T_24 = mux(vector_7.io.resp.bits.write_enable, vector_7.io.resp.bits.data, vector_8.io.resp.bits.data) @[Mux.scala 47:69]
    node _T_25 = mux(vector_6.io.resp.bits.write_enable, vector_6.io.resp.bits.data, _T_24) @[Mux.scala 47:69]
    node _T_26 = mux(vector_5.io.resp.bits.write_enable, vector_5.io.resp.bits.data, _T_25) @[Mux.scala 47:69]
    node _T_27 = mux(vector_4.io.resp.bits.write_enable, vector_4.io.resp.bits.data, _T_26) @[Mux.scala 47:69]
    node _T_28 = mux(vector_3.io.resp.bits.write_enable, vector_3.io.resp.bits.data, _T_27) @[Mux.scala 47:69]
    node _T_29 = mux(vector_2.io.resp.bits.write_enable, vector_2.io.resp.bits.data, _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(vector_1.io.resp.bits.write_enable, vector_1.io.resp.bits.data, _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(vector_0.io.resp.bits.write_enable, vector_0.io.resp.bits.data, _T_30) @[Mux.scala 47:69]
    io.resp.bits.data <= _T_31 @[AllToAllMesh.scala 153:23]
    vector_0.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 161:40]
    vector_0.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 162:44]
    vector_0.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 163:43]
    vector_0.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 164:43]
    vector_0.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 165:46]
    vector_0.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 166:46]
    vector_0.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 167:41]
    vector_0.io.right.in.valid <= vector_1.io.left.out.valid @[AllToAllMesh.scala 169:41]
    vector_0.io.right.in.bits.data <= vector_1.io.left.out.bits.data @[AllToAllMesh.scala 170:45]
    vector_0.io.right.in.bits.x_0 <= vector_1.io.left.out.bits.x_0 @[AllToAllMesh.scala 171:44]
    vector_0.io.right.in.bits.y_0 <= vector_1.io.left.out.bits.y_0 @[AllToAllMesh.scala 172:44]
    vector_0.io.right.in.bits.x_dest <= vector_1.io.left.out.bits.x_dest @[AllToAllMesh.scala 173:47]
    vector_0.io.right.in.bits.y_dest <= vector_1.io.left.out.bits.y_dest @[AllToAllMesh.scala 174:47]
    vector_0.io.right.out.ready <= vector_1.io.left.in.ready @[AllToAllMesh.scala 175:42]
    vector_0.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 177:38]
    vector_0.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 178:42]
    vector_0.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 179:41]
    vector_0.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 180:41]
    vector_0.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 181:44]
    vector_0.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 182:44]
    vector_0.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 183:39]
    vector_0.io.bottom.in.valid <= vector_3.io.up.out.valid @[AllToAllMesh.scala 185:42]
    vector_0.io.bottom.in.bits.data <= vector_3.io.up.out.bits.data @[AllToAllMesh.scala 186:46]
    vector_0.io.bottom.in.bits.x_0 <= vector_3.io.up.out.bits.x_0 @[AllToAllMesh.scala 187:45]
    vector_0.io.bottom.in.bits.y_0 <= vector_3.io.up.out.bits.y_0 @[AllToAllMesh.scala 188:45]
    vector_0.io.bottom.in.bits.x_dest <= vector_3.io.up.out.bits.x_dest @[AllToAllMesh.scala 189:48]
    vector_0.io.bottom.in.bits.y_dest <= vector_3.io.up.out.bits.y_dest @[AllToAllMesh.scala 190:48]
    vector_0.io.bottom.out.ready <= vector_3.io.up.in.ready @[AllToAllMesh.scala 191:43]
    vector_1.io.left.in.valid <= vector_0.io.right.out.valid @[AllToAllMesh.scala 296:40]
    vector_1.io.left.in.bits.data <= vector_0.io.right.out.bits.data @[AllToAllMesh.scala 297:44]
    vector_1.io.left.in.bits.x_0 <= vector_0.io.right.out.bits.x_0 @[AllToAllMesh.scala 298:43]
    vector_1.io.left.in.bits.y_0 <= vector_0.io.right.out.bits.y_0 @[AllToAllMesh.scala 299:43]
    vector_1.io.left.in.bits.x_dest <= vector_0.io.right.out.bits.x_dest @[AllToAllMesh.scala 300:46]
    vector_1.io.left.in.bits.y_dest <= vector_0.io.right.out.bits.y_dest @[AllToAllMesh.scala 301:46]
    vector_1.io.left.out.ready <= vector_0.io.right.in.ready @[AllToAllMesh.scala 302:41]
    vector_1.io.right.in.valid <= vector_2.io.left.out.valid @[AllToAllMesh.scala 304:41]
    vector_1.io.right.in.bits.data <= vector_2.io.left.out.bits.data @[AllToAllMesh.scala 305:45]
    vector_1.io.right.in.bits.x_0 <= vector_2.io.left.out.bits.x_0 @[AllToAllMesh.scala 306:44]
    vector_1.io.right.in.bits.y_0 <= vector_2.io.left.out.bits.y_0 @[AllToAllMesh.scala 307:44]
    vector_1.io.right.in.bits.x_dest <= vector_2.io.left.out.bits.x_dest @[AllToAllMesh.scala 308:47]
    vector_1.io.right.in.bits.y_dest <= vector_2.io.left.out.bits.y_dest @[AllToAllMesh.scala 309:47]
    vector_1.io.right.out.ready <= vector_2.io.left.in.ready @[AllToAllMesh.scala 310:42]
    vector_1.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 312:38]
    vector_1.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 313:42]
    vector_1.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 314:41]
    vector_1.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 315:41]
    vector_1.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 316:44]
    vector_1.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 317:44]
    vector_1.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 318:39]
    vector_1.io.bottom.in.valid <= vector_4.io.up.out.valid @[AllToAllMesh.scala 320:42]
    vector_1.io.bottom.in.bits.data <= vector_4.io.up.out.bits.data @[AllToAllMesh.scala 321:46]
    vector_1.io.bottom.in.bits.x_0 <= vector_4.io.up.out.bits.x_0 @[AllToAllMesh.scala 322:45]
    vector_1.io.bottom.in.bits.y_0 <= vector_4.io.up.out.bits.y_0 @[AllToAllMesh.scala 323:45]
    vector_1.io.bottom.in.bits.x_dest <= vector_4.io.up.out.bits.x_dest @[AllToAllMesh.scala 324:48]
    vector_1.io.bottom.in.bits.y_dest <= vector_4.io.up.out.bits.y_dest @[AllToAllMesh.scala 325:48]
    vector_1.io.bottom.out.ready <= vector_4.io.up.in.ready @[AllToAllMesh.scala 326:43]
    vector_2.io.left.in.valid <= vector_1.io.right.out.valid @[AllToAllMesh.scala 195:40]
    vector_2.io.left.in.bits.data <= vector_1.io.right.out.bits.data @[AllToAllMesh.scala 196:44]
    vector_2.io.left.in.bits.x_0 <= vector_1.io.right.out.bits.x_0 @[AllToAllMesh.scala 197:43]
    vector_2.io.left.in.bits.y_0 <= vector_1.io.right.out.bits.y_0 @[AllToAllMesh.scala 198:43]
    vector_2.io.left.in.bits.x_dest <= vector_1.io.right.out.bits.x_dest @[AllToAllMesh.scala 199:46]
    vector_2.io.left.in.bits.y_dest <= vector_1.io.right.out.bits.y_dest @[AllToAllMesh.scala 200:46]
    vector_2.io.left.out.ready <= vector_1.io.right.in.ready @[AllToAllMesh.scala 201:41]
    vector_2.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 203:41]
    vector_2.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 204:45]
    vector_2.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 205:44]
    vector_2.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 206:44]
    vector_2.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 207:47]
    vector_2.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 208:47]
    vector_2.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 209:42]
    vector_2.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 211:38]
    vector_2.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 212:42]
    vector_2.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 213:41]
    vector_2.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 214:41]
    vector_2.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 215:44]
    vector_2.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 216:44]
    vector_2.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 217:39]
    vector_2.io.bottom.in.valid <= vector_5.io.up.out.valid @[AllToAllMesh.scala 219:42]
    vector_2.io.bottom.in.bits.data <= vector_5.io.up.out.bits.data @[AllToAllMesh.scala 220:46]
    vector_2.io.bottom.in.bits.x_0 <= vector_5.io.up.out.bits.x_0 @[AllToAllMesh.scala 221:45]
    vector_2.io.bottom.in.bits.y_0 <= vector_5.io.up.out.bits.y_0 @[AllToAllMesh.scala 222:45]
    vector_2.io.bottom.in.bits.x_dest <= vector_5.io.up.out.bits.x_dest @[AllToAllMesh.scala 223:48]
    vector_2.io.bottom.in.bits.y_dest <= vector_5.io.up.out.bits.y_dest @[AllToAllMesh.scala 224:48]
    vector_2.io.bottom.out.ready <= vector_5.io.up.in.ready @[AllToAllMesh.scala 225:43]
    vector_3.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 362:40]
    vector_3.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 363:44]
    vector_3.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 364:43]
    vector_3.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 365:43]
    vector_3.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 366:46]
    vector_3.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 367:46]
    vector_3.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 368:41]
    vector_3.io.right.in.valid <= vector_4.io.left.out.valid @[AllToAllMesh.scala 370:41]
    vector_3.io.right.in.bits.data <= vector_4.io.left.out.bits.data @[AllToAllMesh.scala 371:45]
    vector_3.io.right.in.bits.x_0 <= vector_4.io.left.out.bits.x_0 @[AllToAllMesh.scala 372:44]
    vector_3.io.right.in.bits.y_0 <= vector_4.io.left.out.bits.y_0 @[AllToAllMesh.scala 373:44]
    vector_3.io.right.in.bits.x_dest <= vector_4.io.left.out.bits.x_dest @[AllToAllMesh.scala 374:47]
    vector_3.io.right.in.bits.y_dest <= vector_4.io.left.out.bits.y_dest @[AllToAllMesh.scala 375:47]
    vector_3.io.right.out.ready <= vector_4.io.left.in.ready @[AllToAllMesh.scala 376:42]
    vector_3.io.up.in.valid <= vector_0.io.bottom.out.valid @[AllToAllMesh.scala 378:38]
    vector_3.io.up.in.bits.data <= vector_0.io.bottom.out.bits.data @[AllToAllMesh.scala 379:42]
    vector_3.io.up.in.bits.x_0 <= vector_0.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 380:41]
    vector_3.io.up.in.bits.y_0 <= vector_0.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 381:41]
    vector_3.io.up.in.bits.x_dest <= vector_0.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 382:44]
    vector_3.io.up.in.bits.y_dest <= vector_0.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 383:44]
    vector_3.io.up.out.ready <= vector_0.io.bottom.in.ready @[AllToAllMesh.scala 384:39]
    vector_3.io.bottom.in.valid <= vector_6.io.up.out.valid @[AllToAllMesh.scala 386:42]
    vector_3.io.bottom.in.bits.data <= vector_6.io.up.out.bits.data @[AllToAllMesh.scala 387:46]
    vector_3.io.bottom.in.bits.x_0 <= vector_6.io.up.out.bits.x_0 @[AllToAllMesh.scala 388:45]
    vector_3.io.bottom.in.bits.y_0 <= vector_6.io.up.out.bits.y_0 @[AllToAllMesh.scala 389:45]
    vector_3.io.bottom.in.bits.x_dest <= vector_6.io.up.out.bits.x_dest @[AllToAllMesh.scala 390:48]
    vector_3.io.bottom.in.bits.y_dest <= vector_6.io.up.out.bits.y_dest @[AllToAllMesh.scala 391:48]
    vector_3.io.bottom.out.ready <= vector_6.io.up.in.ready @[AllToAllMesh.scala 392:43]
    vector_4.io.left.in.valid <= vector_3.io.right.out.valid @[AllToAllMesh.scala 429:40]
    vector_4.io.left.in.bits.data <= vector_3.io.right.out.bits.data @[AllToAllMesh.scala 430:44]
    vector_4.io.left.in.bits.x_0 <= vector_3.io.right.out.bits.x_0 @[AllToAllMesh.scala 431:43]
    vector_4.io.left.in.bits.y_0 <= vector_3.io.right.out.bits.y_0 @[AllToAllMesh.scala 432:43]
    vector_4.io.left.in.bits.x_dest <= vector_3.io.right.out.bits.x_dest @[AllToAllMesh.scala 433:46]
    vector_4.io.left.in.bits.y_dest <= vector_3.io.right.out.bits.y_dest @[AllToAllMesh.scala 434:46]
    vector_4.io.left.out.ready <= vector_3.io.right.in.ready @[AllToAllMesh.scala 435:41]
    vector_4.io.right.in.valid <= vector_5.io.left.out.valid @[AllToAllMesh.scala 437:41]
    vector_4.io.right.in.bits.data <= vector_5.io.left.out.bits.data @[AllToAllMesh.scala 438:45]
    vector_4.io.right.in.bits.x_0 <= vector_5.io.left.out.bits.x_0 @[AllToAllMesh.scala 439:44]
    vector_4.io.right.in.bits.y_0 <= vector_5.io.left.out.bits.y_0 @[AllToAllMesh.scala 440:44]
    vector_4.io.right.in.bits.x_dest <= vector_5.io.left.out.bits.x_dest @[AllToAllMesh.scala 441:47]
    vector_4.io.right.in.bits.y_dest <= vector_5.io.left.out.bits.y_dest @[AllToAllMesh.scala 442:47]
    vector_4.io.right.out.ready <= vector_5.io.left.in.ready @[AllToAllMesh.scala 443:42]
    vector_4.io.up.in.valid <= vector_1.io.bottom.out.valid @[AllToAllMesh.scala 445:38]
    vector_4.io.up.in.bits.data <= vector_1.io.bottom.out.bits.data @[AllToAllMesh.scala 446:42]
    vector_4.io.up.in.bits.x_0 <= vector_1.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 447:41]
    vector_4.io.up.in.bits.y_0 <= vector_1.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 448:41]
    vector_4.io.up.in.bits.x_dest <= vector_1.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 449:44]
    vector_4.io.up.in.bits.y_dest <= vector_1.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 450:44]
    vector_4.io.up.out.ready <= vector_1.io.bottom.in.ready @[AllToAllMesh.scala 451:39]
    vector_4.io.bottom.in.valid <= vector_7.io.up.out.valid @[AllToAllMesh.scala 453:42]
    vector_4.io.bottom.in.bits.data <= vector_7.io.up.out.bits.data @[AllToAllMesh.scala 454:46]
    vector_4.io.bottom.in.bits.x_0 <= vector_7.io.up.out.bits.x_0 @[AllToAllMesh.scala 455:45]
    vector_4.io.bottom.in.bits.y_0 <= vector_7.io.up.out.bits.y_0 @[AllToAllMesh.scala 456:45]
    vector_4.io.bottom.in.bits.x_dest <= vector_7.io.up.out.bits.x_dest @[AllToAllMesh.scala 457:48]
    vector_4.io.bottom.in.bits.y_dest <= vector_7.io.up.out.bits.y_dest @[AllToAllMesh.scala 458:48]
    vector_4.io.bottom.out.ready <= vector_7.io.up.in.ready @[AllToAllMesh.scala 459:43]
    vector_5.io.left.in.valid <= vector_4.io.right.out.valid @[AllToAllMesh.scala 395:40]
    vector_5.io.left.in.bits.data <= vector_4.io.right.out.bits.data @[AllToAllMesh.scala 396:44]
    vector_5.io.left.in.bits.x_0 <= vector_4.io.right.out.bits.x_0 @[AllToAllMesh.scala 397:43]
    vector_5.io.left.in.bits.y_0 <= vector_4.io.right.out.bits.y_0 @[AllToAllMesh.scala 398:43]
    vector_5.io.left.in.bits.x_dest <= vector_4.io.right.out.bits.x_dest @[AllToAllMesh.scala 399:46]
    vector_5.io.left.in.bits.y_dest <= vector_4.io.right.out.bits.y_dest @[AllToAllMesh.scala 400:46]
    vector_5.io.left.out.ready <= vector_4.io.right.in.ready @[AllToAllMesh.scala 401:41]
    vector_5.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 403:41]
    vector_5.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 404:45]
    vector_5.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 405:44]
    vector_5.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 406:44]
    vector_5.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 407:47]
    vector_5.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 408:47]
    vector_5.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 409:42]
    vector_5.io.up.in.valid <= vector_2.io.bottom.out.valid @[AllToAllMesh.scala 411:38]
    vector_5.io.up.in.bits.data <= vector_2.io.bottom.out.bits.data @[AllToAllMesh.scala 412:42]
    vector_5.io.up.in.bits.x_0 <= vector_2.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 413:41]
    vector_5.io.up.in.bits.y_0 <= vector_2.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 414:41]
    vector_5.io.up.in.bits.x_dest <= vector_2.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 415:44]
    vector_5.io.up.in.bits.y_dest <= vector_2.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 416:44]
    vector_5.io.up.out.ready <= vector_2.io.bottom.in.ready @[AllToAllMesh.scala 417:39]
    vector_5.io.bottom.in.valid <= vector_8.io.up.out.valid @[AllToAllMesh.scala 419:42]
    vector_5.io.bottom.in.bits.data <= vector_8.io.up.out.bits.data @[AllToAllMesh.scala 420:46]
    vector_5.io.bottom.in.bits.x_0 <= vector_8.io.up.out.bits.x_0 @[AllToAllMesh.scala 421:45]
    vector_5.io.bottom.in.bits.y_0 <= vector_8.io.up.out.bits.y_0 @[AllToAllMesh.scala 422:45]
    vector_5.io.bottom.in.bits.x_dest <= vector_8.io.up.out.bits.x_dest @[AllToAllMesh.scala 423:48]
    vector_5.io.bottom.in.bits.y_dest <= vector_8.io.up.out.bits.y_dest @[AllToAllMesh.scala 424:48]
    vector_5.io.bottom.out.ready <= vector_8.io.up.in.ready @[AllToAllMesh.scala 425:43]
    vector_6.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 229:40]
    vector_6.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 230:44]
    vector_6.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 231:43]
    vector_6.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 232:43]
    vector_6.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 233:46]
    vector_6.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 234:46]
    vector_6.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 235:41]
    vector_6.io.right.in.valid <= vector_7.io.left.out.valid @[AllToAllMesh.scala 237:41]
    vector_6.io.right.in.bits.data <= vector_7.io.left.out.bits.data @[AllToAllMesh.scala 238:45]
    vector_6.io.right.in.bits.x_0 <= vector_7.io.left.out.bits.x_0 @[AllToAllMesh.scala 239:44]
    vector_6.io.right.in.bits.y_0 <= vector_7.io.left.out.bits.y_0 @[AllToAllMesh.scala 240:44]
    vector_6.io.right.in.bits.x_dest <= vector_7.io.left.out.bits.x_dest @[AllToAllMesh.scala 241:47]
    vector_6.io.right.in.bits.y_dest <= vector_7.io.left.out.bits.y_dest @[AllToAllMesh.scala 242:47]
    vector_6.io.right.out.ready <= vector_7.io.left.in.ready @[AllToAllMesh.scala 243:42]
    vector_6.io.up.in.valid <= vector_3.io.bottom.out.valid @[AllToAllMesh.scala 245:38]
    vector_6.io.up.in.bits.data <= vector_3.io.bottom.out.bits.data @[AllToAllMesh.scala 246:42]
    vector_6.io.up.in.bits.x_0 <= vector_3.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 247:41]
    vector_6.io.up.in.bits.y_0 <= vector_3.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 248:41]
    vector_6.io.up.in.bits.x_dest <= vector_3.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 249:44]
    vector_6.io.up.in.bits.y_dest <= vector_3.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 250:44]
    vector_6.io.up.out.ready <= vector_3.io.bottom.in.ready @[AllToAllMesh.scala 251:39]
    vector_6.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 253:42]
    vector_6.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 254:46]
    vector_6.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 255:45]
    vector_6.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 256:45]
    vector_6.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 257:48]
    vector_6.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 258:48]
    vector_6.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 259:43]
    vector_7.io.left.in.valid <= vector_6.io.right.out.valid @[AllToAllMesh.scala 329:40]
    vector_7.io.left.in.bits.data <= vector_6.io.right.out.bits.data @[AllToAllMesh.scala 330:44]
    vector_7.io.left.in.bits.x_0 <= vector_6.io.right.out.bits.x_0 @[AllToAllMesh.scala 331:43]
    vector_7.io.left.in.bits.y_0 <= vector_6.io.right.out.bits.y_0 @[AllToAllMesh.scala 332:43]
    vector_7.io.left.in.bits.x_dest <= vector_6.io.right.out.bits.x_dest @[AllToAllMesh.scala 333:46]
    vector_7.io.left.in.bits.y_dest <= vector_6.io.right.out.bits.y_dest @[AllToAllMesh.scala 334:46]
    vector_7.io.left.out.ready <= vector_6.io.right.in.ready @[AllToAllMesh.scala 335:41]
    vector_7.io.right.in.valid <= vector_8.io.left.out.valid @[AllToAllMesh.scala 337:41]
    vector_7.io.right.in.bits.data <= vector_8.io.left.out.bits.data @[AllToAllMesh.scala 338:45]
    vector_7.io.right.in.bits.x_0 <= vector_8.io.left.out.bits.x_0 @[AllToAllMesh.scala 339:44]
    vector_7.io.right.in.bits.y_0 <= vector_8.io.left.out.bits.y_0 @[AllToAllMesh.scala 340:44]
    vector_7.io.right.in.bits.x_dest <= vector_8.io.left.out.bits.x_dest @[AllToAllMesh.scala 341:47]
    vector_7.io.right.in.bits.y_dest <= vector_8.io.left.out.bits.y_dest @[AllToAllMesh.scala 342:47]
    vector_7.io.right.out.ready <= vector_8.io.left.in.ready @[AllToAllMesh.scala 343:42]
    vector_7.io.up.in.valid <= vector_4.io.bottom.out.valid @[AllToAllMesh.scala 345:38]
    vector_7.io.up.in.bits.data <= vector_4.io.bottom.out.bits.data @[AllToAllMesh.scala 346:42]
    vector_7.io.up.in.bits.x_0 <= vector_4.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 347:41]
    vector_7.io.up.in.bits.y_0 <= vector_4.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 348:41]
    vector_7.io.up.in.bits.x_dest <= vector_4.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 349:44]
    vector_7.io.up.in.bits.y_dest <= vector_4.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 350:44]
    vector_7.io.up.out.ready <= vector_4.io.bottom.in.ready @[AllToAllMesh.scala 351:39]
    vector_7.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 353:42]
    vector_7.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 354:46]
    vector_7.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 355:45]
    vector_7.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 356:45]
    vector_7.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 357:48]
    vector_7.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 358:48]
    vector_7.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 359:43]
    vector_8.io.left.in.valid <= vector_7.io.right.out.valid @[AllToAllMesh.scala 262:40]
    vector_8.io.left.in.bits.data <= vector_7.io.right.out.bits.data @[AllToAllMesh.scala 263:44]
    vector_8.io.left.in.bits.x_0 <= vector_7.io.right.out.bits.x_0 @[AllToAllMesh.scala 264:43]
    vector_8.io.left.in.bits.y_0 <= vector_7.io.right.out.bits.y_0 @[AllToAllMesh.scala 265:43]
    vector_8.io.left.in.bits.x_dest <= vector_7.io.right.out.bits.x_dest @[AllToAllMesh.scala 266:46]
    vector_8.io.left.in.bits.y_dest <= vector_7.io.right.out.bits.y_dest @[AllToAllMesh.scala 267:46]
    vector_8.io.left.out.ready <= vector_7.io.right.in.ready @[AllToAllMesh.scala 268:41]
    vector_8.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 270:41]
    vector_8.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 271:45]
    vector_8.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 272:44]
    vector_8.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 273:44]
    vector_8.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 274:47]
    vector_8.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 275:47]
    vector_8.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 276:42]
    vector_8.io.up.in.valid <= vector_5.io.bottom.out.valid @[AllToAllMesh.scala 278:38]
    vector_8.io.up.in.bits.data <= vector_5.io.bottom.out.bits.data @[AllToAllMesh.scala 279:42]
    vector_8.io.up.in.bits.x_0 <= vector_5.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 280:41]
    vector_8.io.up.in.bits.y_0 <= vector_5.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 281:41]
    vector_8.io.up.in.bits.x_dest <= vector_5.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 282:44]
    vector_8.io.up.in.bits.y_dest <= vector_5.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 283:44]
    vector_8.io.up.out.ready <= vector_5.io.bottom.in.ready @[AllToAllMesh.scala 284:39]
    vector_8.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 286:42]
    vector_8.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 287:46]
    vector_8.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 288:45]
    vector_8.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 289:45]
    vector_8.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 290:48]
    vector_8.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 291:48]
    vector_8.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 292:43]

