circuit AllToAllController :
  module AllToAllController :
    input clock : Clock
    input reset : UInt<1>
    output io : { processor : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}, flip mesh : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}}

    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllController.scala 42:22]
    reg r : UInt<5>, clock with :
      reset => (UInt<1>("h0"), r) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      r <= io.processor.cmd.bits.inst.rd @[Reg.scala 16:23]
    reg rd_address_mem : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem) @[Reg.scala 15:16]
    when UInt<1>("h1") : @[Reg.scala 16:19]
      rd_address_mem <= r @[Reg.scala 16:23]
    reg rd_address_mem_resp_stall : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_mem_resp_stall) @[AllToAllController.scala 54:38]
    reg rd_address_action : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address_action) @[AllToAllController.scala 55:30]
    reg resp_signal : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllController.scala 61:28]
    node _T = eq(io.processor.resp.ready, UInt<1>("h0")) @[AllToAllController.scala 63:20]
    node stall_resp = and(_T, resp_signal) @[AllToAllController.scala 63:33]
    io.processor.interrupt <= UInt<1>("h0") @[AllToAllController.scala 67:26]
    io.mesh.cmd.bits.rs1 <= io.processor.cmd.bits.rs1 @[AllToAllController.scala 70:24]
    io.mesh.cmd.bits.rs2 <= io.processor.cmd.bits.rs2 @[AllToAllController.scala 71:24]
    io.processor.resp.bits.data <= io.mesh.resp.bits.data @[AllToAllController.scala 74:19]
    io.processor.resp.valid <= resp_signal @[AllToAllController.scala 77:15]
    node _T_1 = eq(io.processor.cmd.bits.inst.opcode, UInt<6>("h2b")) @[AllToAllController.scala 84:59]
    node goto_excange = and(io.processor.cmd.valid, _T_1) @[AllToAllController.scala 84:33]
    node goto_done_exchange = eq(io.mesh.busy, UInt<1>("h0")) @[AllToAllController.scala 85:28]
    node _T_2 = eq(io.processor.cmd.bits.inst.opcode, UInt<4>("hb")) @[AllToAllController.scala 88:54]
    node mem_cmd = and(io.processor.cmd.valid, _T_2) @[AllToAllController.scala 88:28]
    node loadSignal = eq(io.processor.cmd.bits.inst.funct, UInt<1>("h1")) @[AllToAllController.scala 90:41]
    node storeSignal = eq(io.processor.cmd.bits.inst.funct, UInt<2>("h2")) @[AllToAllController.scala 92:42]
    io.mesh.cmd.valid <= io.processor.cmd.valid @[AllToAllController.scala 95:21]
    node _T_3 = and(mem_cmd, loadSignal) @[AllToAllController.scala 96:36]
    io.mesh.cmd.bits.load <= _T_3 @[AllToAllController.scala 96:25]
    node _T_4 = and(mem_cmd, storeSignal) @[AllToAllController.scala 97:37]
    io.mesh.cmd.bits.store <= _T_4 @[AllToAllController.scala 97:26]
    io.mesh.cmd.bits.doAllToAll <= goto_excange @[AllToAllController.scala 98:31]
    node _T_5 = eq(state, UInt<3>("h0")) @[AllToAllController.scala 102:14]
    when _T_5 : @[AllToAllController.scala 102:23]
      node _T_6 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 104:34]
      io.processor.busy <= _T_6 @[AllToAllController.scala 104:23]
      node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 105:29]
      node _T_8 = and(UInt<1>("h1"), _T_7) @[AllToAllController.scala 105:26]
      io.processor.cmd.ready <= _T_8 @[AllToAllController.scala 105:16]
      node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 107:40]
      node _T_10 = and(io.processor.cmd.valid, _T_9) @[AllToAllController.scala 107:37]
      io.mesh.cmd.valid <= _T_10 @[AllToAllController.scala 107:23]
      resp_signal <= UInt<1>("h0") @[AllToAllController.scala 110:17]
      node _T_11 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 113:39]
      io.mesh.resp.ready <= _T_11 @[AllToAllController.scala 113:24]
      io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 115:31]
      rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 116:31]
      node _T_12 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 118:26]
      node _T_13 = and(goto_excange, _T_12) @[AllToAllController.scala 118:23]
      when _T_13 : @[AllToAllController.scala 118:38]
        state <= UInt<3>("h1") @[AllToAllController.scala 119:13]
      else :
        node _T_14 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 120:27]
        node _T_15 = and(mem_cmd, _T_14) @[AllToAllController.scala 120:24]
        when _T_15 : @[AllToAllController.scala 120:39]
          state <= UInt<3>("h3") @[AllToAllController.scala 121:13]
        else :
          when stall_resp : @[AllToAllController.scala 122:27]
            state <= UInt<3>("h5") @[AllToAllController.scala 123:13]
          else :
            state <= UInt<3>("h0") @[AllToAllController.scala 125:13]
    else :
      node _T_16 = eq(state, UInt<3>("h3")) @[AllToAllController.scala 128:20]
      when _T_16 : @[AllToAllController.scala 128:38]
        node _T_17 = or(UInt<1>("h0"), stall_resp) @[AllToAllController.scala 130:34]
        io.processor.busy <= _T_17 @[AllToAllController.scala 130:23]
        node _T_18 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 131:29]
        node _T_19 = and(UInt<1>("h1"), _T_18) @[AllToAllController.scala 131:26]
        io.processor.cmd.ready <= _T_19 @[AllToAllController.scala 131:16]
        node _T_20 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 133:40]
        node _T_21 = and(io.processor.cmd.valid, _T_20) @[AllToAllController.scala 133:37]
        io.mesh.cmd.valid <= _T_21 @[AllToAllController.scala 133:23]
        resp_signal <= UInt<1>("h1") @[AllToAllController.scala 137:17]
        node _T_22 = and(resp_signal, io.processor.resp.ready) @[AllToAllController.scala 140:39]
        io.mesh.resp.ready <= _T_22 @[AllToAllController.scala 140:24]
        io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 142:31]
        rd_address_mem_resp_stall <= rd_address_mem @[AllToAllController.scala 143:31]
        node _T_23 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 153:26]
        node _T_24 = and(goto_excange, _T_23) @[AllToAllController.scala 153:23]
        when _T_24 : @[AllToAllController.scala 153:38]
          state <= UInt<3>("h1") @[AllToAllController.scala 154:13]
        else :
          node _T_25 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 155:27]
          node _T_26 = and(mem_cmd, _T_25) @[AllToAllController.scala 155:24]
          when _T_26 : @[AllToAllController.scala 155:39]
            state <= UInt<3>("h3") @[AllToAllController.scala 156:13]
          else :
            when stall_resp : @[AllToAllController.scala 157:27]
              state <= UInt<3>("h5") @[AllToAllController.scala 158:13]
            else :
              state <= UInt<3>("h0") @[AllToAllController.scala 160:13]
      else :
        node _T_27 = eq(state, UInt<3>("h5")) @[AllToAllController.scala 163:20]
        when _T_27 : @[AllToAllController.scala 163:36]
          io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 167:23]
          io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 168:16]
          io.mesh.cmd.valid <= UInt<1>("h0") @[AllToAllController.scala 169:23]
          io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 172:24]
          io.processor.resp.bits.rd <= rd_address_mem_resp_stall @[AllToAllController.scala 174:31]
          when stall_resp : @[AllToAllController.scala 176:21]
            resp_signal <= UInt<1>("h1") @[AllToAllController.scala 178:19]
            state <= UInt<3>("h5") @[AllToAllController.scala 179:13]
          else :
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 183:19]
            state <= UInt<3>("h0") @[AllToAllController.scala 184:13]
        else :
          node _T_28 = eq(state, UInt<3>("h1")) @[AllToAllController.scala 188:20]
          when _T_28 : @[AllToAllController.scala 188:31]
            io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 190:23]
            io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 191:16]
            resp_signal <= UInt<1>("h0") @[AllToAllController.scala 193:17]
            rd_address_action <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 195:23]
            io.mesh.resp.ready <= resp_signal @[AllToAllController.scala 198:24]
            io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 200:31]
            state <= UInt<3>("h4") @[AllToAllController.scala 202:11]
          else :
            node _T_29 = eq(state, UInt<3>("h4")) @[AllToAllController.scala 204:20]
            when _T_29 : @[AllToAllController.scala 204:41]
              io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 206:23]
              io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 207:16]
              io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 210:24]
              io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 212:31]
              when goto_done_exchange : @[AllToAllController.scala 214:29]
                state <= UInt<3>("h2") @[AllToAllController.scala 215:13]
              else :
                state <= UInt<3>("h4") @[AllToAllController.scala 217:13]
            else :
              node _T_30 = eq(state, UInt<3>("h2")) @[AllToAllController.scala 220:20]
              when _T_30 : @[AllToAllController.scala 220:36]
                io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 222:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 223:16]
                io.mesh.resp.ready <= UInt<1>("h1") @[AllToAllController.scala 227:24]
                io.processor.resp.bits.rd <= rd_address_action @[AllToAllController.scala 229:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 231:11]
              else :
                io.processor.busy <= UInt<1>("h0") @[AllToAllController.scala 235:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 236:16]
                io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 239:24]
                io.processor.resp.bits.rd <= rd_address_mem @[AllToAllController.scala 241:31]
                state <= UInt<3>("h0") @[AllToAllController.scala 243:11]

