circuit AllToAll :
  module AllToAllController :
    input clock : Clock
    input reset : Reset
    output io : { processor : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}, flip mesh : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}}

    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllController.scala 44:22]
    reg rd_address : UInt<5>, clock with :
      reset => (UInt<1>("h0"), rd_address) @[AllToAllController.scala 59:23]
    node _T = eq(io.processor.resp.ready, UInt<1>("h0")) @[AllToAllController.scala 68:20]
    node stall_resp = and(_T, io.mesh.resp.valid) @[AllToAllController.scala 68:33]
    io.processor.interrupt <= UInt<1>("h0") @[AllToAllController.scala 72:26]
    io.mesh.cmd.bits.rs1 <= io.processor.cmd.bits.rs1 @[AllToAllController.scala 75:24]
    io.mesh.cmd.bits.rs2 <= io.processor.cmd.bits.rs2 @[AllToAllController.scala 76:24]
    io.processor.resp.bits.data <= io.mesh.resp.bits.data @[AllToAllController.scala 80:19]
    node _T_1 = eq(io.processor.cmd.bits.inst.opcode, UInt<6>("h2b")) @[AllToAllController.scala 91:60]
    node action_signal = and(io.processor.cmd.valid, _T_1) @[AllToAllController.scala 91:34]
    node done_action_signal = eq(io.mesh.busy, UInt<1>("h0")) @[AllToAllController.scala 92:28]
    node _T_2 = eq(io.processor.cmd.bits.inst.opcode, UInt<4>("hb")) @[AllToAllController.scala 95:54]
    node mem_cmd = and(io.processor.cmd.valid, _T_2) @[AllToAllController.scala 95:28]
    node load_signal = eq(io.processor.cmd.bits.inst.funct, UInt<1>("h1")) @[AllToAllController.scala 97:42]
    node store_signal = eq(io.processor.cmd.bits.inst.funct, UInt<2>("h2")) @[AllToAllController.scala 99:43]
    io.mesh.cmd.valid <= io.processor.cmd.valid @[AllToAllController.scala 102:21]
    node _T_3 = and(mem_cmd, load_signal) @[AllToAllController.scala 103:36]
    io.mesh.cmd.bits.load <= _T_3 @[AllToAllController.scala 103:25]
    node _T_4 = and(mem_cmd, store_signal) @[AllToAllController.scala 104:37]
    io.mesh.cmd.bits.store <= _T_4 @[AllToAllController.scala 104:26]
    io.mesh.cmd.bits.doAllToAll <= action_signal @[AllToAllController.scala 105:31]
    node _T_5 = eq(state, UInt<3>("h0")) @[AllToAllController.scala 107:14]
    when _T_5 : @[AllToAllController.scala 107:23]
      io.processor.busy <= UInt<1>("h0") @[AllToAllController.scala 109:23]
      io.processor.cmd.ready <= UInt<1>("h1") @[AllToAllController.scala 110:16]
      io.mesh.cmd.valid <= io.processor.cmd.valid @[AllToAllController.scala 112:23]
      io.processor.resp.valid <= UInt<1>("h0") @[AllToAllController.scala 114:17]
      io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 121:24]
      io.processor.resp.bits.rd <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 123:31]
      rd_address <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 125:16]
      when action_signal : @[AllToAllController.scala 127:24]
        state <= UInt<3>("h1") @[AllToAllController.scala 128:13]
      else :
        node _T_6 = and(mem_cmd, load_signal) @[AllToAllController.scala 129:24]
        when _T_6 : @[AllToAllController.scala 129:39]
          state <= UInt<3>("h4") @[AllToAllController.scala 130:13]
        else :
          node _T_7 = and(mem_cmd, store_signal) @[AllToAllController.scala 131:24]
          when _T_7 : @[AllToAllController.scala 131:40]
            state <= UInt<3>("h5") @[AllToAllController.scala 132:13]
          else :
            state <= UInt<3>("h0") @[AllToAllController.scala 134:13]
    else :
      node _T_8 = eq(state, UInt<3>("h4")) @[AllToAllController.scala 137:20]
      when _T_8 : @[AllToAllController.scala 137:35]
        io.processor.busy <= stall_resp @[AllToAllController.scala 139:23]
        node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 140:19]
        io.processor.cmd.ready <= _T_9 @[AllToAllController.scala 140:16]
        node _T_10 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 142:26]
        node _T_11 = and(_T_10, io.processor.cmd.valid) @[AllToAllController.scala 142:38]
        io.mesh.cmd.valid <= _T_11 @[AllToAllController.scala 142:23]
        io.processor.resp.valid <= UInt<1>("h1") @[AllToAllController.scala 148:17]
        io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 153:24]
        io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 155:31]
        node _T_12 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 158:10]
        when _T_12 : @[AllToAllController.scala 158:22]
          rd_address <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 159:18]
        node _T_13 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 171:28]
        node _T_14 = and(action_signal, _T_13) @[AllToAllController.scala 171:25]
        when _T_14 : @[AllToAllController.scala 171:40]
          state <= UInt<3>("h1") @[AllToAllController.scala 172:13]
        else :
          node _T_15 = and(mem_cmd, load_signal) @[AllToAllController.scala 173:24]
          node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 173:42]
          node _T_17 = and(_T_15, _T_16) @[AllToAllController.scala 173:39]
          when _T_17 : @[AllToAllController.scala 173:54]
            state <= UInt<3>("h4") @[AllToAllController.scala 174:13]
          else :
            node _T_18 = and(mem_cmd, store_signal) @[AllToAllController.scala 175:24]
            node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 175:43]
            node _T_20 = and(_T_18, _T_19) @[AllToAllController.scala 175:40]
            when _T_20 : @[AllToAllController.scala 175:55]
              state <= UInt<3>("h5") @[AllToAllController.scala 176:13]
            else :
              when stall_resp : @[AllToAllController.scala 177:27]
                state <= UInt<3>("h7") @[AllToAllController.scala 178:13]
              else :
                state <= UInt<3>("h0") @[AllToAllController.scala 180:13]
      else :
        node _T_21 = eq(state, UInt<3>("h5")) @[AllToAllController.scala 183:20]
        when _T_21 : @[AllToAllController.scala 183:36]
          io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 186:23]
          io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 188:16]
          io.mesh.cmd.valid <= UInt<1>("h0") @[AllToAllController.scala 190:23]
          io.processor.resp.valid <= UInt<1>("h0") @[AllToAllController.scala 196:17]
          io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 200:24]
          io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 202:31]
          state <= UInt<3>("h6") @[AllToAllController.scala 216:11]
        else :
          node _T_22 = eq(state, UInt<3>("h6")) @[AllToAllController.scala 218:20]
          when _T_22 : @[AllToAllController.scala 218:35]
            io.processor.busy <= stall_resp @[AllToAllController.scala 220:23]
            node _T_23 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 221:19]
            io.processor.cmd.ready <= _T_23 @[AllToAllController.scala 221:16]
            node _T_24 = and(io.processor.cmd.valid, io.processor.cmd.valid) @[AllToAllController.scala 223:37]
            io.mesh.cmd.valid <= _T_24 @[AllToAllController.scala 223:23]
            io.processor.resp.valid <= UInt<1>("h1") @[AllToAllController.scala 229:17]
            io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 233:24]
            io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 235:31]
            node _T_25 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 239:10]
            when _T_25 : @[AllToAllController.scala 239:22]
              rd_address <= io.processor.cmd.bits.inst.rd @[AllToAllController.scala 240:18]
            node _T_26 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 252:28]
            node _T_27 = and(action_signal, _T_26) @[AllToAllController.scala 252:25]
            when _T_27 : @[AllToAllController.scala 252:40]
              state <= UInt<3>("h1") @[AllToAllController.scala 253:13]
            else :
              node _T_28 = and(mem_cmd, load_signal) @[AllToAllController.scala 254:24]
              node _T_29 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 254:42]
              node _T_30 = and(_T_28, _T_29) @[AllToAllController.scala 254:39]
              when _T_30 : @[AllToAllController.scala 254:54]
                state <= UInt<3>("h4") @[AllToAllController.scala 255:13]
              else :
                node _T_31 = and(mem_cmd, store_signal) @[AllToAllController.scala 256:24]
                node _T_32 = eq(stall_resp, UInt<1>("h0")) @[AllToAllController.scala 256:43]
                node _T_33 = and(_T_31, _T_32) @[AllToAllController.scala 256:40]
                when _T_33 : @[AllToAllController.scala 256:55]
                  state <= UInt<3>("h5") @[AllToAllController.scala 257:13]
                else :
                  when stall_resp : @[AllToAllController.scala 258:27]
                    state <= UInt<3>("h7") @[AllToAllController.scala 259:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllController.scala 261:13]
          else :
            node _T_34 = eq(state, UInt<3>("h7")) @[AllToAllController.scala 264:20]
            when _T_34 : @[AllToAllController.scala 264:41]
              io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 268:23]
              io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 269:16]
              io.mesh.cmd.valid <= UInt<1>("h0") @[AllToAllController.scala 270:23]
              io.processor.resp.valid <= UInt<1>("h1") @[AllToAllController.scala 272:17]
              io.mesh.resp.ready <= io.processor.resp.ready @[AllToAllController.scala 275:24]
              io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 277:31]
              when stall_resp : @[AllToAllController.scala 279:21]
                state <= UInt<3>("h7") @[AllToAllController.scala 280:13]
              else :
                state <= UInt<3>("h0") @[AllToAllController.scala 283:13]
            else :
              node _T_35 = eq(state, UInt<3>("h1")) @[AllToAllController.scala 287:20]
              when _T_35 : @[AllToAllController.scala 287:31]
                io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 289:23]
                io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 290:16]
                io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 297:24]
                io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 299:19]
                io.processor.resp.valid <= UInt<1>("h0") @[AllToAllController.scala 300:17]
                state <= UInt<3>("h2") @[AllToAllController.scala 302:11]
              else :
                node _T_36 = eq(state, UInt<3>("h2")) @[AllToAllController.scala 304:20]
                when _T_36 : @[AllToAllController.scala 304:41]
                  io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 306:23]
                  io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 307:16]
                  io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 310:24]
                  io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 312:31]
                  io.processor.resp.valid <= UInt<1>("h0") @[AllToAllController.scala 314:17]
                  when done_action_signal : @[AllToAllController.scala 316:30]
                    state <= UInt<3>("h3") @[AllToAllController.scala 317:13]
                  else :
                    state <= UInt<3>("h2") @[AllToAllController.scala 319:13]
                else :
                  node _T_37 = eq(state, UInt<3>("h3")) @[AllToAllController.scala 322:20]
                  when _T_37 : @[AllToAllController.scala 322:36]
                    io.processor.busy <= UInt<1>("h1") @[AllToAllController.scala 324:23]
                    io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 325:16]
                    io.mesh.resp.ready <= UInt<1>("h1") @[AllToAllController.scala 329:24]
                    io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 331:31]
                    io.processor.resp.valid <= UInt<1>("h1") @[AllToAllController.scala 333:17]
                    state <= UInt<3>("h0") @[AllToAllController.scala 335:11]
                  else :
                    io.processor.busy <= UInt<1>("h0") @[AllToAllController.scala 339:23]
                    io.processor.cmd.ready <= UInt<1>("h0") @[AllToAllController.scala 340:16]
                    io.processor.resp.valid <= UInt<1>("h0") @[AllToAllController.scala 342:17]
                    io.mesh.resp.ready <= UInt<1>("h0") @[AllToAllController.scala 345:24]
                    io.processor.resp.bits.rd <= rd_address @[AllToAllController.scala 347:31]
                    state <= UInt<3>("h0") @[AllToAllController.scala 349:11]

  module AllToAllPEupLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEup :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEupRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEleft :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEmiddle :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEright :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEbottomLeftCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEbottom :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h1")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllPEbottomRightCorner :
    input clock : Clock
    input reset : Reset
    output io : { busy : UInt<1>, flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, write_enable : UInt<1>}}, left : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, right : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, up : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}, bottom : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, x_0 : UInt<16>, y_0 : UInt<16>, x_dest : UInt<16>, y_dest : UInt<16>}}}}

    cmem memPE : UInt<64> [32] @[AllToAllPE.scala 141:18]
    reg x_coord : UInt<16>, clock with :
      reset => (reset, UInt<2>("h2")) @[AllToAllPE.scala 144:24]
    reg y_coord : UInt<16>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 145:24]
    reg rs1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs1) @[AllToAllPE.scala 148:16]
    reg rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), rs2) @[AllToAllPE.scala 149:16]
    rs1 <= io.cmd.bits.rs1 @[AllToAllPE.scala 152:7]
    rs2 <= io.cmd.bits.rs2 @[AllToAllPE.scala 153:7]
    reg w_en : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 157:21]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<3>("h0")) @[AllToAllPE.scala 167:22]
    reg resp_value : UInt<64>, clock with :
      reset => (reset, UInt<1>("h0")) @[AllToAllPE.scala 169:27]
    node x_value = bits(rs2, 15, 0) @[AllToAllPE.scala 171:20]
    node y_value = bits(rs2, 31, 16) @[AllToAllPE.scala 172:20]
    node memIndex = bits(rs2, 63, 32) @[AllToAllPE.scala 173:21]
    node _T = eq(x_value, x_coord) @[AllToAllPE.scala 181:29]
    node _T_1 = eq(y_value, y_coord) @[AllToAllPE.scala 181:54]
    node is_this_PE = and(_T, _T_1) @[AllToAllPE.scala 181:42]
    node load_signal = and(io.cmd.valid, io.cmd.bits.load) @[AllToAllPE.scala 182:34]
    node store_signal = and(io.cmd.valid, io.cmd.bits.store) @[AllToAllPE.scala 183:35]
    node allToAll_signal = and(io.cmd.valid, io.cmd.bits.doAllToAll) @[AllToAllPE.scala 184:38]
    node _T_2 = eq(io.resp.ready, UInt<1>("h0")) @[AllToAllPE.scala 186:20]
    node stall_resp = and(_T_2, io.resp.valid) @[AllToAllPE.scala 186:35]
    node _T_3 = eq(state, UInt<3>("h0")) @[AllToAllPE.scala 188:14]
    when _T_3 : @[AllToAllPE.scala 188:23]
      io.busy <= UInt<1>("h0") @[AllToAllPE.scala 189:13]
      io.cmd.ready <= UInt<1>("h1") @[AllToAllPE.scala 190:18]
      io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 191:19]
      io.resp.bits.data <= UInt<1>("h0") @[AllToAllPE.scala 192:23]
      io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 195:31]
      w_en <= UInt<1>("h0") @[AllToAllPE.scala 196:10]
      when load_signal : @[AllToAllPE.scala 210:22]
        state <= UInt<3>("h3") @[AllToAllPE.scala 211:13]
      else :
        when store_signal : @[AllToAllPE.scala 212:29]
          state <= UInt<3>("h4") @[AllToAllPE.scala 213:13]
        else :
          when allToAll_signal : @[AllToAllPE.scala 214:32]
            state <= UInt<3>("h1") @[AllToAllPE.scala 215:13]
          else :
            state <= UInt<3>("h0") @[AllToAllPE.scala 217:13]
    else :
      node _T_4 = eq(state, UInt<3>("h3")) @[AllToAllPE.scala 220:20]
      when _T_4 : @[AllToAllPE.scala 220:32]
        io.busy <= stall_resp @[AllToAllPE.scala 221:13]
        node _T_5 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 222:21]
        io.cmd.ready <= _T_5 @[AllToAllPE.scala 222:18]
        io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 223:19]
        io.resp.bits.data <= UInt<6>("h20") @[AllToAllPE.scala 224:23]
        resp_value <= UInt<6>("h20") @[AllToAllPE.scala 225:16]
        when is_this_PE : @[AllToAllPE.scala 237:21]
          node _T_6 = bits(memIndex, 4, 0) @[AllToAllPE.scala 238:12]
          infer mport MPORT = memPE[_T_6], clock @[AllToAllPE.scala 238:12]
          MPORT <= rs1 @[AllToAllPE.scala 238:23]
          io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 239:33]
          w_en <= UInt<1>("h1") @[AllToAllPE.scala 240:12]
        else :
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 242:33]
          w_en <= UInt<1>("h0") @[AllToAllPE.scala 243:12]
        node _T_7 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 247:25]
        node _T_8 = and(load_signal, _T_7) @[AllToAllPE.scala 247:22]
        when _T_8 : @[AllToAllPE.scala 247:37]
          state <= UInt<3>("h3") @[AllToAllPE.scala 248:13]
        else :
          node _T_9 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 249:32]
          node _T_10 = and(store_signal, _T_9) @[AllToAllPE.scala 249:29]
          when _T_10 : @[AllToAllPE.scala 249:44]
            state <= UInt<3>("h4") @[AllToAllPE.scala 250:13]
          else :
            node _T_11 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 251:35]
            node _T_12 = and(allToAll_signal, _T_11) @[AllToAllPE.scala 251:32]
            when _T_12 : @[AllToAllPE.scala 251:47]
              state <= UInt<3>("h1") @[AllToAllPE.scala 252:13]
            else :
              when stall_resp : @[AllToAllPE.scala 253:27]
                state <= UInt<3>("h6") @[AllToAllPE.scala 254:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 256:13]
      else :
        node _T_13 = eq(state, UInt<3>("h4")) @[AllToAllPE.scala 259:20]
        when _T_13 : @[AllToAllPE.scala 259:33]
          io.busy <= UInt<1>("h1") @[AllToAllPE.scala 261:13]
          io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 262:18]
          io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 263:19]
          io.resp.bits.data <= UInt<6>("h21") @[AllToAllPE.scala 264:23]
          when is_this_PE : @[AllToAllPE.scala 274:21]
            node _T_14 = bits(memIndex, 4, 0) @[AllToAllPE.scala 275:26]
            infer mport MPORT_1 = memPE[_T_14], clock @[AllToAllPE.scala 275:26]
            resp_value <= MPORT_1 @[AllToAllPE.scala 275:18]
            w_en <= UInt<1>("h1") @[AllToAllPE.scala 276:12]
          else :
            w_en <= UInt<1>("h0") @[AllToAllPE.scala 278:12]
          io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 281:31]
          state <= UInt<3>("h5") @[AllToAllPE.scala 283:11]
        else :
          node _T_15 = eq(state, UInt<3>("h5")) @[AllToAllPE.scala 285:20]
          when _T_15 : @[AllToAllPE.scala 285:35]
            io.busy <= stall_resp @[AllToAllPE.scala 287:13]
            node _T_16 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 288:21]
            io.cmd.ready <= _T_16 @[AllToAllPE.scala 288:18]
            io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 289:19]
            io.resp.bits.data <= resp_value @[AllToAllPE.scala 290:23]
            io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 291:31]
            node _T_17 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 302:25]
            node _T_18 = and(load_signal, _T_17) @[AllToAllPE.scala 302:22]
            when _T_18 : @[AllToAllPE.scala 302:37]
              state <= UInt<3>("h3") @[AllToAllPE.scala 303:13]
            else :
              node _T_19 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 304:32]
              node _T_20 = and(store_signal, _T_19) @[AllToAllPE.scala 304:29]
              when _T_20 : @[AllToAllPE.scala 304:44]
                state <= UInt<3>("h4") @[AllToAllPE.scala 305:13]
              else :
                node _T_21 = eq(stall_resp, UInt<1>("h0")) @[AllToAllPE.scala 306:35]
                node _T_22 = and(allToAll_signal, _T_21) @[AllToAllPE.scala 306:32]
                when _T_22 : @[AllToAllPE.scala 306:47]
                  state <= UInt<3>("h1") @[AllToAllPE.scala 307:13]
                else :
                  when stall_resp : @[AllToAllPE.scala 308:27]
                    state <= UInt<3>("h6") @[AllToAllPE.scala 309:13]
                  else :
                    state <= UInt<3>("h0") @[AllToAllPE.scala 311:13]
          else :
            node _T_23 = eq(state, UInt<3>("h6")) @[AllToAllPE.scala 314:20]
            when _T_23 : @[AllToAllPE.scala 314:36]
              io.busy <= UInt<1>("h1") @[AllToAllPE.scala 316:13]
              io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 317:18]
              io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 318:19]
              io.resp.bits.data <= resp_value @[AllToAllPE.scala 319:23]
              io.resp.bits.write_enable <= w_en @[AllToAllPE.scala 321:31]
              when stall_resp : @[AllToAllPE.scala 323:21]
                state <= UInt<3>("h6") @[AllToAllPE.scala 324:13]
              else :
                state <= UInt<3>("h0") @[AllToAllPE.scala 326:13]
            else :
              node _T_24 = eq(state, UInt<3>("h1")) @[AllToAllPE.scala 329:20]
              when _T_24 : @[AllToAllPE.scala 329:31]
                io.busy <= UInt<1>("h1") @[AllToAllPE.scala 330:13]
                io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 331:18]
                io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 332:19]
                io.resp.bits.data <= resp_value @[AllToAllPE.scala 333:23]
                w_en <= UInt<1>("h0") @[AllToAllPE.scala 338:10]
                io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 339:31]
                state <= UInt<3>("h2") @[AllToAllPE.scala 341:11]
              else :
                node _T_25 = eq(state, UInt<3>("h2")) @[AllToAllPE.scala 342:20]
                when _T_25 : @[AllToAllPE.scala 342:36]
                  io.busy <= UInt<1>("h1") @[AllToAllPE.scala 343:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 344:18]
                  io.resp.valid <= UInt<1>("h1") @[AllToAllPE.scala 345:19]
                  io.resp.bits.data <= resp_value @[AllToAllPE.scala 346:23]
                  io.resp.bits.write_enable <= UInt<1>("h0") @[AllToAllPE.scala 347:31]
                  state <= UInt<3>("h0") @[AllToAllPE.scala 351:11]
                else :
                  io.busy <= UInt<1>("h0") @[AllToAllPE.scala 353:13]
                  io.cmd.ready <= UInt<1>("h0") @[AllToAllPE.scala 354:18]
                  io.resp.valid <= UInt<1>("h0") @[AllToAllPE.scala 355:19]
                  io.resp.bits.data <= UInt<64>("haaaaaaaa") @[AllToAllPE.scala 356:23]
                  io.resp.bits.write_enable <= UInt<1>("h1") @[AllToAllPE.scala 357:31]
    io.left.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 362:25]
    io.left.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 363:24]
    io.left.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 364:24]
    io.left.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 365:27]
    io.left.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 366:27]
    io.left.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 367:21]
    io.left.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 368:20]
    io.right.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 370:26]
    io.right.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 371:25]
    io.right.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 372:25]
    io.right.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 373:28]
    io.right.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 374:28]
    io.right.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 375:22]
    io.right.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 376:21]
    io.up.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 378:23]
    io.up.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 379:22]
    io.up.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 380:22]
    io.up.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 381:25]
    io.up.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 382:25]
    io.up.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 383:19]
    io.up.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 384:18]
    io.bottom.out.bits.data <= UInt<64>("h0") @[AllToAllPE.scala 386:27]
    io.bottom.out.bits.x_0 <= UInt<16>("h0") @[AllToAllPE.scala 387:26]
    io.bottom.out.bits.y_0 <= UInt<16>("h0") @[AllToAllPE.scala 388:26]
    io.bottom.out.bits.x_dest <= UInt<16>("h0") @[AllToAllPE.scala 389:29]
    io.bottom.out.bits.y_dest <= UInt<16>("h0") @[AllToAllPE.scala 390:29]
    io.bottom.out.valid <= UInt<1>("h0") @[AllToAllPE.scala 391:23]
    io.bottom.in.ready <= UInt<1>("h0") @[AllToAllPE.scala 392:22]

  module AllToAllMesh :
    input clock : Clock
    input reset : Reset
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { load : UInt<1>, store : UInt<1>, doAllToAll : UInt<1>, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>}}, busy : UInt<1>}

    inst vector_0 of AllToAllPEupLeftCorner @[AllToAllMesh.scala 95:41]
    vector_0.clock <= clock
    vector_0.reset <= reset
    inst vector_1 of AllToAllPEup @[AllToAllMesh.scala 106:41]
    vector_1.clock <= clock
    vector_1.reset <= reset
    inst vector_2 of AllToAllPEupRightCorner @[AllToAllMesh.scala 98:41]
    vector_2.clock <= clock
    vector_2.reset <= reset
    inst vector_3 of AllToAllPEleft @[AllToAllMesh.scala 112:41]
    vector_3.clock <= clock
    vector_3.reset <= reset
    inst vector_4 of AllToAllPEmiddle @[AllToAllMesh.scala 118:41]
    vector_4.clock <= clock
    vector_4.reset <= reset
    inst vector_5 of AllToAllPEright @[AllToAllMesh.scala 115:41]
    vector_5.clock <= clock
    vector_5.reset <= reset
    inst vector_6 of AllToAllPEbottomLeftCorner @[AllToAllMesh.scala 101:41]
    vector_6.clock <= clock
    vector_6.reset <= reset
    inst vector_7 of AllToAllPEbottom @[AllToAllMesh.scala 109:41]
    vector_7.clock <= clock
    vector_7.reset <= reset
    inst vector_8 of AllToAllPEbottomRightCorner @[AllToAllMesh.scala 104:41]
    vector_8.clock <= clock
    vector_8.reset <= reset
    vector_0.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_0.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_0.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_0.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_0.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_0.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_0.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_1.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_1.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_1.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_1.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_1.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_1.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_1.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_2.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_2.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_2.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_2.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_2.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_2.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_2.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_3.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_3.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_3.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_3.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_3.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_3.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_3.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_4.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_4.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_4.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_4.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_4.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_4.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_4.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_5.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_5.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_5.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_5.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_5.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_5.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_5.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_6.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_6.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_6.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_6.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_6.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_6.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_6.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_7.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_7.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_7.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_7.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_7.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_7.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_7.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    vector_8.io.cmd.valid <= io.cmd.valid @[AllToAllMesh.scala 130:32]
    vector_8.io.cmd.bits.load <= io.cmd.bits.load @[AllToAllMesh.scala 131:36]
    vector_8.io.cmd.bits.store <= io.cmd.bits.store @[AllToAllMesh.scala 132:37]
    vector_8.io.cmd.bits.doAllToAll <= io.cmd.bits.doAllToAll @[AllToAllMesh.scala 133:42]
    vector_8.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllMesh.scala 135:35]
    vector_8.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllMesh.scala 136:35]
    vector_8.io.resp.ready <= io.resp.ready @[AllToAllMesh.scala 138:33]
    node _T = or(vector_0.io.busy, vector_1.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_1 = or(_T, vector_2.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_2 = or(_T_1, vector_3.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_3 = or(_T_2, vector_4.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_4 = or(_T_3, vector_5.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_5 = or(_T_4, vector_6.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_6 = or(_T_5, vector_7.io.busy) @[AllToAllMesh.scala 143:47]
    node _T_7 = or(_T_6, vector_8.io.busy) @[AllToAllMesh.scala 143:47]
    io.busy <= _T_7 @[AllToAllMesh.scala 143:13]
    node _T_8 = and(vector_0.io.cmd.ready, vector_1.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_9 = and(_T_8, vector_2.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_10 = and(_T_9, vector_3.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_11 = and(_T_10, vector_4.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_12 = and(_T_11, vector_5.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_13 = and(_T_12, vector_6.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_14 = and(_T_13, vector_7.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    node _T_15 = and(_T_14, vector_8.io.cmd.ready) @[AllToAllMesh.scala 144:57]
    io.cmd.ready <= _T_15 @[AllToAllMesh.scala 144:18]
    node _T_16 = and(vector_0.io.resp.valid, vector_1.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_17 = and(_T_16, vector_2.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_18 = and(_T_17, vector_3.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_19 = and(_T_18, vector_4.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_20 = and(_T_19, vector_5.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_21 = and(_T_20, vector_6.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_22 = and(_T_21, vector_7.io.resp.valid) @[AllToAllMesh.scala 145:59]
    node _T_23 = and(_T_22, vector_8.io.resp.valid) @[AllToAllMesh.scala 145:59]
    io.resp.valid <= _T_23 @[AllToAllMesh.scala 145:19]
    node _T_24 = mux(vector_7.io.resp.bits.write_enable, vector_7.io.resp.bits.data, vector_8.io.resp.bits.data) @[Mux.scala 47:69]
    node _T_25 = mux(vector_6.io.resp.bits.write_enable, vector_6.io.resp.bits.data, _T_24) @[Mux.scala 47:69]
    node _T_26 = mux(vector_5.io.resp.bits.write_enable, vector_5.io.resp.bits.data, _T_25) @[Mux.scala 47:69]
    node _T_27 = mux(vector_4.io.resp.bits.write_enable, vector_4.io.resp.bits.data, _T_26) @[Mux.scala 47:69]
    node _T_28 = mux(vector_3.io.resp.bits.write_enable, vector_3.io.resp.bits.data, _T_27) @[Mux.scala 47:69]
    node _T_29 = mux(vector_2.io.resp.bits.write_enable, vector_2.io.resp.bits.data, _T_28) @[Mux.scala 47:69]
    node _T_30 = mux(vector_1.io.resp.bits.write_enable, vector_1.io.resp.bits.data, _T_29) @[Mux.scala 47:69]
    node _T_31 = mux(vector_0.io.resp.bits.write_enable, vector_0.io.resp.bits.data, _T_30) @[Mux.scala 47:69]
    io.resp.bits.data <= _T_31 @[AllToAllMesh.scala 197:23]
    vector_0.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 205:40]
    vector_0.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 206:44]
    vector_0.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 207:43]
    vector_0.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 208:43]
    vector_0.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 209:46]
    vector_0.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 210:46]
    vector_0.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 211:41]
    vector_0.io.right.in.valid <= vector_1.io.left.out.valid @[AllToAllMesh.scala 213:41]
    vector_0.io.right.in.bits.data <= vector_1.io.left.out.bits.data @[AllToAllMesh.scala 214:45]
    vector_0.io.right.in.bits.x_0 <= vector_1.io.left.out.bits.x_0 @[AllToAllMesh.scala 215:44]
    vector_0.io.right.in.bits.y_0 <= vector_1.io.left.out.bits.y_0 @[AllToAllMesh.scala 216:44]
    vector_0.io.right.in.bits.x_dest <= vector_1.io.left.out.bits.x_dest @[AllToAllMesh.scala 217:47]
    vector_0.io.right.in.bits.y_dest <= vector_1.io.left.out.bits.y_dest @[AllToAllMesh.scala 218:47]
    vector_0.io.right.out.ready <= vector_1.io.left.in.ready @[AllToAllMesh.scala 219:42]
    vector_0.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 221:38]
    vector_0.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 222:42]
    vector_0.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 223:41]
    vector_0.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 224:41]
    vector_0.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 225:44]
    vector_0.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 226:44]
    vector_0.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 227:39]
    vector_0.io.bottom.in.valid <= vector_3.io.up.out.valid @[AllToAllMesh.scala 229:42]
    vector_0.io.bottom.in.bits.data <= vector_3.io.up.out.bits.data @[AllToAllMesh.scala 230:46]
    vector_0.io.bottom.in.bits.x_0 <= vector_3.io.up.out.bits.x_0 @[AllToAllMesh.scala 231:45]
    vector_0.io.bottom.in.bits.y_0 <= vector_3.io.up.out.bits.y_0 @[AllToAllMesh.scala 232:45]
    vector_0.io.bottom.in.bits.x_dest <= vector_3.io.up.out.bits.x_dest @[AllToAllMesh.scala 233:48]
    vector_0.io.bottom.in.bits.y_dest <= vector_3.io.up.out.bits.y_dest @[AllToAllMesh.scala 234:48]
    vector_0.io.bottom.out.ready <= vector_3.io.up.in.ready @[AllToAllMesh.scala 235:43]
    vector_1.io.left.in.valid <= vector_0.io.right.out.valid @[AllToAllMesh.scala 370:40]
    vector_1.io.left.in.bits.data <= vector_0.io.right.out.bits.data @[AllToAllMesh.scala 371:44]
    vector_1.io.left.in.bits.x_0 <= vector_0.io.right.out.bits.x_0 @[AllToAllMesh.scala 372:43]
    vector_1.io.left.in.bits.y_0 <= vector_0.io.right.out.bits.y_0 @[AllToAllMesh.scala 373:43]
    vector_1.io.left.in.bits.x_dest <= vector_0.io.right.out.bits.x_dest @[AllToAllMesh.scala 374:46]
    vector_1.io.left.in.bits.y_dest <= vector_0.io.right.out.bits.y_dest @[AllToAllMesh.scala 375:46]
    vector_1.io.left.out.ready <= vector_0.io.right.in.ready @[AllToAllMesh.scala 376:41]
    vector_1.io.right.in.valid <= vector_2.io.left.out.valid @[AllToAllMesh.scala 378:41]
    vector_1.io.right.in.bits.data <= vector_2.io.left.out.bits.data @[AllToAllMesh.scala 379:45]
    vector_1.io.right.in.bits.x_0 <= vector_2.io.left.out.bits.x_0 @[AllToAllMesh.scala 380:44]
    vector_1.io.right.in.bits.y_0 <= vector_2.io.left.out.bits.y_0 @[AllToAllMesh.scala 381:44]
    vector_1.io.right.in.bits.x_dest <= vector_2.io.left.out.bits.x_dest @[AllToAllMesh.scala 382:47]
    vector_1.io.right.in.bits.y_dest <= vector_2.io.left.out.bits.y_dest @[AllToAllMesh.scala 383:47]
    vector_1.io.right.out.ready <= vector_2.io.left.in.ready @[AllToAllMesh.scala 384:42]
    vector_1.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 386:38]
    vector_1.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 387:42]
    vector_1.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 388:41]
    vector_1.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 389:41]
    vector_1.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 390:44]
    vector_1.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 391:44]
    vector_1.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 392:39]
    vector_1.io.bottom.in.valid <= vector_4.io.up.out.valid @[AllToAllMesh.scala 394:42]
    vector_1.io.bottom.in.bits.data <= vector_4.io.up.out.bits.data @[AllToAllMesh.scala 395:46]
    vector_1.io.bottom.in.bits.x_0 <= vector_4.io.up.out.bits.x_0 @[AllToAllMesh.scala 396:45]
    vector_1.io.bottom.in.bits.y_0 <= vector_4.io.up.out.bits.y_0 @[AllToAllMesh.scala 397:45]
    vector_1.io.bottom.in.bits.x_dest <= vector_4.io.up.out.bits.x_dest @[AllToAllMesh.scala 398:48]
    vector_1.io.bottom.in.bits.y_dest <= vector_4.io.up.out.bits.y_dest @[AllToAllMesh.scala 399:48]
    vector_1.io.bottom.out.ready <= vector_4.io.up.in.ready @[AllToAllMesh.scala 400:43]
    vector_2.io.left.in.valid <= vector_1.io.right.out.valid @[AllToAllMesh.scala 245:40]
    vector_2.io.left.in.bits.data <= vector_1.io.right.out.bits.data @[AllToAllMesh.scala 246:44]
    vector_2.io.left.in.bits.x_0 <= vector_1.io.right.out.bits.x_0 @[AllToAllMesh.scala 247:43]
    vector_2.io.left.in.bits.y_0 <= vector_1.io.right.out.bits.y_0 @[AllToAllMesh.scala 248:43]
    vector_2.io.left.in.bits.x_dest <= vector_1.io.right.out.bits.x_dest @[AllToAllMesh.scala 249:46]
    vector_2.io.left.in.bits.y_dest <= vector_1.io.right.out.bits.y_dest @[AllToAllMesh.scala 250:46]
    vector_2.io.left.out.ready <= vector_1.io.right.in.ready @[AllToAllMesh.scala 251:41]
    vector_2.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 253:41]
    vector_2.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 254:45]
    vector_2.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 255:44]
    vector_2.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 256:44]
    vector_2.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 257:47]
    vector_2.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 258:47]
    vector_2.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 259:42]
    vector_2.io.up.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 261:38]
    vector_2.io.up.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 262:42]
    vector_2.io.up.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 263:41]
    vector_2.io.up.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 264:41]
    vector_2.io.up.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 265:44]
    vector_2.io.up.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 266:44]
    vector_2.io.up.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 267:39]
    vector_2.io.bottom.in.valid <= vector_5.io.up.out.valid @[AllToAllMesh.scala 269:42]
    vector_2.io.bottom.in.bits.data <= vector_5.io.up.out.bits.data @[AllToAllMesh.scala 270:46]
    vector_2.io.bottom.in.bits.x_0 <= vector_5.io.up.out.bits.x_0 @[AllToAllMesh.scala 271:45]
    vector_2.io.bottom.in.bits.y_0 <= vector_5.io.up.out.bits.y_0 @[AllToAllMesh.scala 272:45]
    vector_2.io.bottom.in.bits.x_dest <= vector_5.io.up.out.bits.x_dest @[AllToAllMesh.scala 273:48]
    vector_2.io.bottom.in.bits.y_dest <= vector_5.io.up.out.bits.y_dest @[AllToAllMesh.scala 274:48]
    vector_2.io.bottom.out.ready <= vector_5.io.up.in.ready @[AllToAllMesh.scala 275:43]
    vector_3.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 451:40]
    vector_3.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 452:44]
    vector_3.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 453:43]
    vector_3.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 454:43]
    vector_3.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 455:46]
    vector_3.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 456:46]
    vector_3.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 457:41]
    vector_3.io.right.in.valid <= vector_4.io.left.out.valid @[AllToAllMesh.scala 459:41]
    vector_3.io.right.in.bits.data <= vector_4.io.left.out.bits.data @[AllToAllMesh.scala 460:45]
    vector_3.io.right.in.bits.x_0 <= vector_4.io.left.out.bits.x_0 @[AllToAllMesh.scala 461:44]
    vector_3.io.right.in.bits.y_0 <= vector_4.io.left.out.bits.y_0 @[AllToAllMesh.scala 462:44]
    vector_3.io.right.in.bits.x_dest <= vector_4.io.left.out.bits.x_dest @[AllToAllMesh.scala 463:47]
    vector_3.io.right.in.bits.y_dest <= vector_4.io.left.out.bits.y_dest @[AllToAllMesh.scala 464:47]
    vector_3.io.right.out.ready <= vector_4.io.left.in.ready @[AllToAllMesh.scala 465:42]
    vector_3.io.up.in.valid <= vector_0.io.bottom.out.valid @[AllToAllMesh.scala 467:38]
    vector_3.io.up.in.bits.data <= vector_0.io.bottom.out.bits.data @[AllToAllMesh.scala 468:42]
    vector_3.io.up.in.bits.x_0 <= vector_0.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 469:41]
    vector_3.io.up.in.bits.y_0 <= vector_0.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 470:41]
    vector_3.io.up.in.bits.x_dest <= vector_0.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 471:44]
    vector_3.io.up.in.bits.y_dest <= vector_0.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 472:44]
    vector_3.io.up.out.ready <= vector_0.io.bottom.in.ready @[AllToAllMesh.scala 473:39]
    vector_3.io.bottom.in.valid <= vector_6.io.up.out.valid @[AllToAllMesh.scala 475:42]
    vector_3.io.bottom.in.bits.data <= vector_6.io.up.out.bits.data @[AllToAllMesh.scala 476:46]
    vector_3.io.bottom.in.bits.x_0 <= vector_6.io.up.out.bits.x_0 @[AllToAllMesh.scala 477:45]
    vector_3.io.bottom.in.bits.y_0 <= vector_6.io.up.out.bits.y_0 @[AllToAllMesh.scala 478:45]
    vector_3.io.bottom.in.bits.x_dest <= vector_6.io.up.out.bits.x_dest @[AllToAllMesh.scala 479:48]
    vector_3.io.bottom.in.bits.y_dest <= vector_6.io.up.out.bits.y_dest @[AllToAllMesh.scala 480:48]
    vector_3.io.bottom.out.ready <= vector_6.io.up.in.ready @[AllToAllMesh.scala 481:43]
    vector_4.io.left.in.valid <= vector_3.io.right.out.valid @[AllToAllMesh.scala 534:40]
    vector_4.io.left.in.bits.data <= vector_3.io.right.out.bits.data @[AllToAllMesh.scala 535:44]
    vector_4.io.left.in.bits.x_0 <= vector_3.io.right.out.bits.x_0 @[AllToAllMesh.scala 536:43]
    vector_4.io.left.in.bits.y_0 <= vector_3.io.right.out.bits.y_0 @[AllToAllMesh.scala 537:43]
    vector_4.io.left.in.bits.x_dest <= vector_3.io.right.out.bits.x_dest @[AllToAllMesh.scala 538:46]
    vector_4.io.left.in.bits.y_dest <= vector_3.io.right.out.bits.y_dest @[AllToAllMesh.scala 539:46]
    vector_4.io.left.out.ready <= vector_3.io.right.in.ready @[AllToAllMesh.scala 540:41]
    vector_4.io.right.in.valid <= vector_5.io.left.out.valid @[AllToAllMesh.scala 542:41]
    vector_4.io.right.in.bits.data <= vector_5.io.left.out.bits.data @[AllToAllMesh.scala 543:45]
    vector_4.io.right.in.bits.x_0 <= vector_5.io.left.out.bits.x_0 @[AllToAllMesh.scala 544:44]
    vector_4.io.right.in.bits.y_0 <= vector_5.io.left.out.bits.y_0 @[AllToAllMesh.scala 545:44]
    vector_4.io.right.in.bits.x_dest <= vector_5.io.left.out.bits.x_dest @[AllToAllMesh.scala 546:47]
    vector_4.io.right.in.bits.y_dest <= vector_5.io.left.out.bits.y_dest @[AllToAllMesh.scala 547:47]
    vector_4.io.right.out.ready <= vector_5.io.left.in.ready @[AllToAllMesh.scala 548:42]
    vector_4.io.up.in.valid <= vector_1.io.bottom.out.valid @[AllToAllMesh.scala 550:38]
    vector_4.io.up.in.bits.data <= vector_1.io.bottom.out.bits.data @[AllToAllMesh.scala 551:42]
    vector_4.io.up.in.bits.x_0 <= vector_1.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 552:41]
    vector_4.io.up.in.bits.y_0 <= vector_1.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 553:41]
    vector_4.io.up.in.bits.x_dest <= vector_1.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 554:44]
    vector_4.io.up.in.bits.y_dest <= vector_1.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 555:44]
    vector_4.io.up.out.ready <= vector_1.io.bottom.in.ready @[AllToAllMesh.scala 556:39]
    vector_4.io.bottom.in.valid <= vector_7.io.up.out.valid @[AllToAllMesh.scala 558:42]
    vector_4.io.bottom.in.bits.data <= vector_7.io.up.out.bits.data @[AllToAllMesh.scala 559:46]
    vector_4.io.bottom.in.bits.x_0 <= vector_7.io.up.out.bits.x_0 @[AllToAllMesh.scala 560:45]
    vector_4.io.bottom.in.bits.y_0 <= vector_7.io.up.out.bits.y_0 @[AllToAllMesh.scala 561:45]
    vector_4.io.bottom.in.bits.x_dest <= vector_7.io.up.out.bits.x_dest @[AllToAllMesh.scala 562:48]
    vector_4.io.bottom.in.bits.y_dest <= vector_7.io.up.out.bits.y_dest @[AllToAllMesh.scala 563:48]
    vector_4.io.bottom.out.ready <= vector_7.io.up.in.ready @[AllToAllMesh.scala 564:43]
    vector_5.io.left.in.valid <= vector_4.io.right.out.valid @[AllToAllMesh.scala 492:40]
    vector_5.io.left.in.bits.data <= vector_4.io.right.out.bits.data @[AllToAllMesh.scala 493:44]
    vector_5.io.left.in.bits.x_0 <= vector_4.io.right.out.bits.x_0 @[AllToAllMesh.scala 494:43]
    vector_5.io.left.in.bits.y_0 <= vector_4.io.right.out.bits.y_0 @[AllToAllMesh.scala 495:43]
    vector_5.io.left.in.bits.x_dest <= vector_4.io.right.out.bits.x_dest @[AllToAllMesh.scala 496:46]
    vector_5.io.left.in.bits.y_dest <= vector_4.io.right.out.bits.y_dest @[AllToAllMesh.scala 497:46]
    vector_5.io.left.out.ready <= vector_4.io.right.in.ready @[AllToAllMesh.scala 498:41]
    vector_5.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 500:41]
    vector_5.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 501:45]
    vector_5.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 502:44]
    vector_5.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 503:44]
    vector_5.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 504:47]
    vector_5.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 505:47]
    vector_5.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 506:42]
    vector_5.io.up.in.valid <= vector_2.io.bottom.out.valid @[AllToAllMesh.scala 508:38]
    vector_5.io.up.in.bits.data <= vector_2.io.bottom.out.bits.data @[AllToAllMesh.scala 509:42]
    vector_5.io.up.in.bits.x_0 <= vector_2.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 510:41]
    vector_5.io.up.in.bits.y_0 <= vector_2.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 511:41]
    vector_5.io.up.in.bits.x_dest <= vector_2.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 512:44]
    vector_5.io.up.in.bits.y_dest <= vector_2.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 513:44]
    vector_5.io.up.out.ready <= vector_2.io.bottom.in.ready @[AllToAllMesh.scala 514:39]
    vector_5.io.bottom.in.valid <= vector_8.io.up.out.valid @[AllToAllMesh.scala 516:42]
    vector_5.io.bottom.in.bits.data <= vector_8.io.up.out.bits.data @[AllToAllMesh.scala 517:46]
    vector_5.io.bottom.in.bits.x_0 <= vector_8.io.up.out.bits.x_0 @[AllToAllMesh.scala 518:45]
    vector_5.io.bottom.in.bits.y_0 <= vector_8.io.up.out.bits.y_0 @[AllToAllMesh.scala 519:45]
    vector_5.io.bottom.in.bits.x_dest <= vector_8.io.up.out.bits.x_dest @[AllToAllMesh.scala 520:48]
    vector_5.io.bottom.in.bits.y_dest <= vector_8.io.up.out.bits.y_dest @[AllToAllMesh.scala 521:48]
    vector_5.io.bottom.out.ready <= vector_8.io.up.in.ready @[AllToAllMesh.scala 522:43]
    vector_6.io.left.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 287:40]
    vector_6.io.left.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 288:44]
    vector_6.io.left.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 289:43]
    vector_6.io.left.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 290:43]
    vector_6.io.left.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 291:46]
    vector_6.io.left.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 292:46]
    vector_6.io.left.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 293:41]
    vector_6.io.right.in.valid <= vector_7.io.left.out.valid @[AllToAllMesh.scala 295:41]
    vector_6.io.right.in.bits.data <= vector_7.io.left.out.bits.data @[AllToAllMesh.scala 296:45]
    vector_6.io.right.in.bits.x_0 <= vector_7.io.left.out.bits.x_0 @[AllToAllMesh.scala 297:44]
    vector_6.io.right.in.bits.y_0 <= vector_7.io.left.out.bits.y_0 @[AllToAllMesh.scala 298:44]
    vector_6.io.right.in.bits.x_dest <= vector_7.io.left.out.bits.x_dest @[AllToAllMesh.scala 299:47]
    vector_6.io.right.in.bits.y_dest <= vector_7.io.left.out.bits.y_dest @[AllToAllMesh.scala 300:47]
    vector_6.io.right.out.ready <= vector_7.io.left.in.ready @[AllToAllMesh.scala 301:42]
    vector_6.io.up.in.valid <= vector_3.io.bottom.out.valid @[AllToAllMesh.scala 303:38]
    vector_6.io.up.in.bits.data <= vector_3.io.bottom.out.bits.data @[AllToAllMesh.scala 304:42]
    vector_6.io.up.in.bits.x_0 <= vector_3.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 305:41]
    vector_6.io.up.in.bits.y_0 <= vector_3.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 306:41]
    vector_6.io.up.in.bits.x_dest <= vector_3.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 307:44]
    vector_6.io.up.in.bits.y_dest <= vector_3.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 308:44]
    vector_6.io.up.out.ready <= vector_3.io.bottom.in.ready @[AllToAllMesh.scala 309:39]
    vector_6.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 311:42]
    vector_6.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 312:46]
    vector_6.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 313:45]
    vector_6.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 314:45]
    vector_6.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 315:48]
    vector_6.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 316:48]
    vector_6.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 317:43]
    vector_7.io.left.in.valid <= vector_6.io.right.out.valid @[AllToAllMesh.scala 410:40]
    vector_7.io.left.in.bits.data <= vector_6.io.right.out.bits.data @[AllToAllMesh.scala 411:44]
    vector_7.io.left.in.bits.x_0 <= vector_6.io.right.out.bits.x_0 @[AllToAllMesh.scala 412:43]
    vector_7.io.left.in.bits.y_0 <= vector_6.io.right.out.bits.y_0 @[AllToAllMesh.scala 413:43]
    vector_7.io.left.in.bits.x_dest <= vector_6.io.right.out.bits.x_dest @[AllToAllMesh.scala 414:46]
    vector_7.io.left.in.bits.y_dest <= vector_6.io.right.out.bits.y_dest @[AllToAllMesh.scala 415:46]
    vector_7.io.left.out.ready <= vector_6.io.right.in.ready @[AllToAllMesh.scala 416:41]
    vector_7.io.right.in.valid <= vector_8.io.left.out.valid @[AllToAllMesh.scala 418:41]
    vector_7.io.right.in.bits.data <= vector_8.io.left.out.bits.data @[AllToAllMesh.scala 419:45]
    vector_7.io.right.in.bits.x_0 <= vector_8.io.left.out.bits.x_0 @[AllToAllMesh.scala 420:44]
    vector_7.io.right.in.bits.y_0 <= vector_8.io.left.out.bits.y_0 @[AllToAllMesh.scala 421:44]
    vector_7.io.right.in.bits.x_dest <= vector_8.io.left.out.bits.x_dest @[AllToAllMesh.scala 422:47]
    vector_7.io.right.in.bits.y_dest <= vector_8.io.left.out.bits.y_dest @[AllToAllMesh.scala 423:47]
    vector_7.io.right.out.ready <= vector_8.io.left.in.ready @[AllToAllMesh.scala 424:42]
    vector_7.io.up.in.valid <= vector_4.io.bottom.out.valid @[AllToAllMesh.scala 426:38]
    vector_7.io.up.in.bits.data <= vector_4.io.bottom.out.bits.data @[AllToAllMesh.scala 427:42]
    vector_7.io.up.in.bits.x_0 <= vector_4.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 428:41]
    vector_7.io.up.in.bits.y_0 <= vector_4.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 429:41]
    vector_7.io.up.in.bits.x_dest <= vector_4.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 430:44]
    vector_7.io.up.in.bits.y_dest <= vector_4.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 431:44]
    vector_7.io.up.out.ready <= vector_4.io.bottom.in.ready @[AllToAllMesh.scala 432:39]
    vector_7.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 434:42]
    vector_7.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 435:46]
    vector_7.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 436:45]
    vector_7.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 437:45]
    vector_7.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 438:48]
    vector_7.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 439:48]
    vector_7.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 440:43]
    vector_8.io.left.in.valid <= vector_7.io.right.out.valid @[AllToAllMesh.scala 328:40]
    vector_8.io.left.in.bits.data <= vector_7.io.right.out.bits.data @[AllToAllMesh.scala 329:44]
    vector_8.io.left.in.bits.x_0 <= vector_7.io.right.out.bits.x_0 @[AllToAllMesh.scala 330:43]
    vector_8.io.left.in.bits.y_0 <= vector_7.io.right.out.bits.y_0 @[AllToAllMesh.scala 331:43]
    vector_8.io.left.in.bits.x_dest <= vector_7.io.right.out.bits.x_dest @[AllToAllMesh.scala 332:46]
    vector_8.io.left.in.bits.y_dest <= vector_7.io.right.out.bits.y_dest @[AllToAllMesh.scala 333:46]
    vector_8.io.left.out.ready <= vector_7.io.right.in.ready @[AllToAllMesh.scala 334:41]
    vector_8.io.right.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 336:41]
    vector_8.io.right.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 337:45]
    vector_8.io.right.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 338:44]
    vector_8.io.right.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 339:44]
    vector_8.io.right.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 340:47]
    vector_8.io.right.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 341:47]
    vector_8.io.right.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 342:42]
    vector_8.io.up.in.valid <= vector_5.io.bottom.out.valid @[AllToAllMesh.scala 344:38]
    vector_8.io.up.in.bits.data <= vector_5.io.bottom.out.bits.data @[AllToAllMesh.scala 345:42]
    vector_8.io.up.in.bits.x_0 <= vector_5.io.bottom.out.bits.x_0 @[AllToAllMesh.scala 346:41]
    vector_8.io.up.in.bits.y_0 <= vector_5.io.bottom.out.bits.y_0 @[AllToAllMesh.scala 347:41]
    vector_8.io.up.in.bits.x_dest <= vector_5.io.bottom.out.bits.x_dest @[AllToAllMesh.scala 348:44]
    vector_8.io.up.in.bits.y_dest <= vector_5.io.bottom.out.bits.y_dest @[AllToAllMesh.scala 349:44]
    vector_8.io.up.out.ready <= vector_5.io.bottom.in.ready @[AllToAllMesh.scala 350:39]
    vector_8.io.bottom.in.valid <= UInt<1>("h0") @[AllToAllMesh.scala 352:42]
    vector_8.io.bottom.in.bits.data <= UInt<64>("h0") @[AllToAllMesh.scala 353:46]
    vector_8.io.bottom.in.bits.x_0 <= UInt<16>("h0") @[AllToAllMesh.scala 354:45]
    vector_8.io.bottom.in.bits.y_0 <= UInt<16>("h0") @[AllToAllMesh.scala 355:45]
    vector_8.io.bottom.in.bits.x_dest <= UInt<16>("h0") @[AllToAllMesh.scala 356:48]
    vector_8.io.bottom.in.bits.y_dest <= UInt<16>("h0") @[AllToAllMesh.scala 357:48]
    vector_8.io.bottom.out.ready <= UInt<1>("h0") @[AllToAllMesh.scala 358:43]

  module AllToAllModule :
    input clock : Clock
    input reset : Reset
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}

    inst controller of AllToAllController @[AllToAllAccelerator.scala 71:26]
    controller.clock <= clock
    controller.reset <= reset
    inst mesh of AllToAllMesh @[AllToAllAccelerator.scala 72:20]
    mesh.clock <= clock
    mesh.reset <= reset
    controller.io.processor.exception <= io.exception @[AllToAllAccelerator.scala 78:6]
    io.interrupt <= controller.io.processor.interrupt @[AllToAllAccelerator.scala 78:6]
    io.busy <= controller.io.processor.busy @[AllToAllAccelerator.scala 78:6]
    io.resp.bits.data <= controller.io.processor.resp.bits.data @[AllToAllAccelerator.scala 78:6]
    io.resp.bits.rd <= controller.io.processor.resp.bits.rd @[AllToAllAccelerator.scala 78:6]
    io.resp.valid <= controller.io.processor.resp.valid @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.resp.ready <= io.resp.ready @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.opcode <= io.cmd.bits.inst.opcode @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rd <= io.cmd.bits.inst.rd @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xs2 <= io.cmd.bits.inst.xs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xs1 <= io.cmd.bits.inst.xs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.xd <= io.cmd.bits.inst.xd @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rs1 <= io.cmd.bits.inst.rs1 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.rs2 <= io.cmd.bits.inst.rs2 @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.bits.inst.funct <= io.cmd.bits.inst.funct @[AllToAllAccelerator.scala 78:6]
    controller.io.processor.cmd.valid <= io.cmd.valid @[AllToAllAccelerator.scala 78:6]
    io.cmd.ready <= controller.io.processor.cmd.ready @[AllToAllAccelerator.scala 78:6]
    mesh.io.cmd.valid <= controller.io.mesh.cmd.valid @[AllToAllAccelerator.scala 83:21]
    mesh.io.cmd.bits.load <= controller.io.mesh.cmd.bits.load @[AllToAllAccelerator.scala 84:25]
    mesh.io.cmd.bits.store <= controller.io.mesh.cmd.bits.store @[AllToAllAccelerator.scala 85:26]
    mesh.io.cmd.bits.doAllToAll <= controller.io.mesh.cmd.bits.doAllToAll @[AllToAllAccelerator.scala 86:31]
    mesh.io.cmd.bits.rs1 <= controller.io.mesh.cmd.bits.rs1 @[AllToAllAccelerator.scala 87:24]
    mesh.io.cmd.bits.rs2 <= controller.io.mesh.cmd.bits.rs2 @[AllToAllAccelerator.scala 88:24]
    mesh.io.resp.ready <= controller.io.mesh.resp.ready @[AllToAllAccelerator.scala 89:22]
    controller.io.mesh.cmd.ready <= mesh.io.cmd.ready @[AllToAllAccelerator.scala 92:32]
    controller.io.mesh.resp.valid <= mesh.io.resp.valid @[AllToAllAccelerator.scala 93:33]
    controller.io.mesh.resp.bits.data <= mesh.io.resp.bits.data @[AllToAllAccelerator.scala 94:37]
    controller.io.mesh.busy <= mesh.io.busy @[AllToAllAccelerator.scala 95:27]

  module AllToAll :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip cmd : { flip ready : UInt<1>, valid : UInt<1>, bits : { inst : { funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<64>, rs2 : UInt<64>}}, resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rd : UInt<5>, data : UInt<64>}}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}

    inst aTaModule of AllToAllModule @[AllToAllTest.scala 13:25]
    aTaModule.clock <= clock
    aTaModule.reset <= reset
    aTaModule.io.cmd.valid <= io.cmd.valid @[AllToAllTest.scala 16:26]
    aTaModule.io.cmd.bits.inst.funct <= io.cmd.bits.inst.funct @[AllToAllTest.scala 17:36]
    aTaModule.io.cmd.bits.inst.rs2 <= io.cmd.bits.inst.rs2 @[AllToAllTest.scala 18:34]
    aTaModule.io.cmd.bits.inst.rs1 <= io.cmd.bits.inst.rs1 @[AllToAllTest.scala 19:34]
    aTaModule.io.cmd.bits.inst.xd <= io.cmd.bits.inst.xd @[AllToAllTest.scala 20:33]
    aTaModule.io.cmd.bits.inst.xs1 <= io.cmd.bits.inst.xs1 @[AllToAllTest.scala 21:34]
    aTaModule.io.cmd.bits.inst.xs2 <= io.cmd.bits.inst.xs2 @[AllToAllTest.scala 22:34]
    aTaModule.io.cmd.bits.inst.rd <= io.cmd.bits.inst.rd @[AllToAllTest.scala 23:33]
    aTaModule.io.cmd.bits.inst.opcode <= io.cmd.bits.inst.opcode @[AllToAllTest.scala 24:37]
    aTaModule.io.cmd.bits.rs1 <= io.cmd.bits.rs1 @[AllToAllTest.scala 25:29]
    aTaModule.io.cmd.bits.rs2 <= io.cmd.bits.rs2 @[AllToAllTest.scala 26:29]
    aTaModule.io.resp.ready <= io.resp.ready @[AllToAllTest.scala 27:27]
    io.cmd.ready <= aTaModule.io.cmd.ready @[AllToAllTest.scala 31:16]
    io.resp.valid <= aTaModule.io.resp.valid @[AllToAllTest.scala 32:17]
    io.resp.bits.rd <= aTaModule.io.resp.bits.rd @[AllToAllTest.scala 33:19]
    io.resp.bits.data <= aTaModule.io.resp.bits.data @[AllToAllTest.scala 34:21]
    io.interrupt <= aTaModule.io.interrupt @[AllToAllTest.scala 37:16]
    io.busy <= aTaModule.io.busy @[AllToAllTest.scala 38:11]
    aTaModule.io.exception <= io.exception @[AllToAllTest.scala 41:26]

